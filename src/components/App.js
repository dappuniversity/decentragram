import React, { Component } from 'react';
import Web3 from 'web3';
import Identicon from 'identicon.js';
import './App.css';
import Decentragram from '../abis/Decentragram.json'
import Navbar from './Navbar'
import Main from './Main'


class App extends Component {

  async componentWillMount() {
    await this.loadWeb3()
    this.loadBlockchainData()
  }

  //Import web3 to connect our browser to the Ethereum blockchain
  async loadWeb3 () {
    if(window.ethereum) {
      window.web3 = new Web3(window.ethereum)
      await window.ethereum.enable()
    } else if (window.web3) {
      window.web3 = new Web3(window.web3.currentProvider)
    } else {
      window.alert('Non-Ethereum browser detected. Please install MetaMask')
    }
  }

  async loadBlockchainData () {
    const web3 = window.web3
    //load account
    const accounts = await web3.eth.getAccounts()
    //accounts is an array, and twe set the state to the first item in the array
    this.setState({account: accounts[0]})

    //In these lines, we are connecting the smart contract by finding the abi and address in the Decentragram.JSON file generated by truffle.
    const networkId = await web3.eth.net.getId()
    const networkData = Decentragram.networks[networkId]
    if(networkData){
      const decentragram = web3.eth.Contract(Decentragram.abi, networkData.address)
      this.setState({ decentragram })

      //With web3, you have to use .call() to read data from the blockchain rather than just invoking the function
      const imagesCount = await decentragram.methods.imageCount().call()
      this.setState({ imagesCount })

      this.setState({loading: false})
    } else {
      window.alert('Decentragram contract has not been deployed to the network')
    }
  }

  constructor(props) {
    super(props)
    this.state = {
      account: '',
      decentragram: null,
      images: [],
      loading: true
    }
  }

  render() {
    return (
      <div>
        <Navbar account={this.state.account} />
        { this.state.loading
          ? <div id="loader" className="text-center mt-5"><p>Loading...</p></div>
          : <Main
            // Code...
            />
          }
        }
      </div>
    );
  }
}

export default App;
