{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar pump = require('pump');\n\nvar tar = require('tar-stream');\n\nvar ReadableStream = require('readable-stream').Readable;\n\nvar ObjectsStreams =\n/*#__PURE__*/\nfunction (_ReadableStream) {\n  _inherits(ObjectsStreams, _ReadableStream);\n\n  function ObjectsStreams(options) {\n    _classCallCheck(this, ObjectsStreams);\n\n    var opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    return _possibleConstructorReturn(this, _getPrototypeOf(ObjectsStreams).call(this, opts));\n  }\n\n  _createClass(ObjectsStreams, [{\n    key: \"_read\",\n    value: function _read() {}\n  }]);\n\n  return ObjectsStreams;\n}(ReadableStream);\n/*\n  Transform a tar stream into a stream of objects:\n\n  Output format:\n  { path: 'string', content: Stream<Readable> }\n*/\n\n\nvar TarStreamToObjects = function TarStreamToObjects(inputStream, callback) {\n  var outputStream = new ObjectsStreams();\n  var extractStream = tar.extract();\n  extractStream.on('entry', function (header, stream, next) {\n    stream.on('end', next);\n\n    if (header.type !== 'directory') {\n      outputStream.push({\n        path: header.name,\n        content: stream\n      });\n    } else {\n      outputStream.push({\n        path: header.name\n      });\n      stream.resume();\n    }\n  }).on('finish', function () {\n    return outputStream.push(null);\n  });\n  pump(inputStream, extractStream);\n  callback(null, outputStream);\n};\n\nmodule.exports = TarStreamToObjects;","map":null,"metadata":{},"sourceType":"script"}