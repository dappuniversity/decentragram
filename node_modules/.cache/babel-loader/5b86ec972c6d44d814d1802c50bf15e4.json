{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar TransformStream = require('readable-stream').Transform;\n\nvar PubsubMessage = require('./pubsub-message-utils');\n\nvar PubsubMessageStream =\n/*#__PURE__*/\nfunction (_TransformStream) {\n  _inherits(PubsubMessageStream, _TransformStream);\n\n  function PubsubMessageStream(options) {\n    _classCallCheck(this, PubsubMessageStream);\n\n    var opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    return _possibleConstructorReturn(this, _getPrototypeOf(PubsubMessageStream).call(this, opts));\n  }\n\n  _createClass(PubsubMessageStream, [{\n    key: \"_transform\",\n    value: function _transform(obj, enc, callback) {\n      // go-ipfs returns '{}' as the very first object atm, we skip that\n      if (Object.keys(obj).length === 0) {\n        return callback();\n      }\n\n      try {\n        var msg = PubsubMessage.deserialize(obj, 'base64');\n        this.push(msg);\n        callback();\n      } catch (err) {\n        return callback(err);\n      }\n    }\n  }], [{\n    key: \"from\",\n    value: function from(inputStream, callback) {\n      var outputStream = inputStream.pipe(new PubsubMessageStream());\n      inputStream.on('end', function () {\n        return outputStream.emit('end');\n      });\n      callback(null, outputStream);\n    }\n  }]);\n\n  return PubsubMessageStream;\n}(TransformStream);\n\nmodule.exports = PubsubMessageStream;","map":null,"metadata":{},"sourceType":"script"}