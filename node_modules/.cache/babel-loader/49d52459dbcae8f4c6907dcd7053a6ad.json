{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nmodule.exports = function (send) {\n  return promisify(function (key, opts, callback) {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    function handleResult(done, err, res) {\n      if (err) {\n        return done(err);\n      }\n\n      if (!res) {\n        return done(new Error('empty response'));\n      }\n\n      if (res.length === 0) {\n        return done(new Error('no value returned for key'));\n      } // Inconsistent return values in the browser vs node\n\n\n      if (Array.isArray(res)) {\n        res = res[0];\n      }\n\n      if (res.Type === 5) {\n        done(null, res.Extra);\n      } else {\n        var error = new Error('key was not found (type 6)');\n        done(error);\n      }\n    }\n\n    send({\n      path: 'dht/get',\n      args: key,\n      qs: opts\n    }, handleResult.bind(null, callback));\n  });\n};","map":null,"metadata":{},"sourceType":"script"}