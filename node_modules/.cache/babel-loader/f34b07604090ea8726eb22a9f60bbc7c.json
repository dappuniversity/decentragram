{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar streamToValue = require('../utils/stream-to-value');\n\nvar CID = require('cids');\n\nvar LRU = require('lru-cache');\n\nvar lruOptions = {\n  max: 128\n};\nvar cache = new LRU(lruOptions);\n\nmodule.exports = function (send) {\n  return promisify(function (cid, options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    var cidB58Str;\n\n    try {\n      cid = new CID(cid);\n      cidB58Str = cid.toBaseEncodedString();\n    } catch (err) {\n      return callback(err);\n    }\n\n    var node = cache.get(cidB58Str);\n\n    if (node) {\n      return callback(null, node.data);\n    }\n\n    send({\n      path: 'object/data',\n      args: cidB58Str\n    }, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (typeof result.pipe === 'function') {\n        streamToValue(result, callback);\n      } else {\n        callback(null, result);\n      }\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}