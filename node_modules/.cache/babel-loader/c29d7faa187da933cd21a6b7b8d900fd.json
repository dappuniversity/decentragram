{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\30698\\\\DecentraBook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar defaultBase = self.location ? self.location.protocol + '//' + self.location.host : '';\nvar URL = self.URL;\n\nvar URLWithLegacySupport =\n/*#__PURE__*/\nfunction () {\n  function URLWithLegacySupport() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBase;\n\n    _classCallCheck(this, URLWithLegacySupport);\n\n    this.super = new URL(url, base);\n    this.path = this.pathname + this.search;\n    this.auth = this.username && this.password ? this.username + ':' + this.password : null;\n    this.query = this.search && this.search.startsWith('?') ? this.search.slice(1) : null;\n  }\n\n  _createClass(URLWithLegacySupport, [{\n    key: \"createObjectURL\",\n    value: function createObjectURL(o) {\n      return this.super.createObjectURL(o);\n    }\n  }, {\n    key: \"revokeObjectURL\",\n    value: function revokeObjectURL(o) {\n      this.super.revokeObjectURL(o);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.super.toJSON();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.super.toString();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this.toString();\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this.super.hash;\n    },\n    set: function set(hash) {\n      this.super.hash = hash;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.super.host;\n    },\n    set: function set(host) {\n      this.super.host = host;\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      return this.super.hostname;\n    },\n    set: function set(hostname) {\n      this.super.hostname = hostname;\n    }\n  }, {\n    key: \"href\",\n    get: function get() {\n      return this.super.href;\n    },\n    set: function set(href) {\n      this.super.href = href;\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return this.super.origin;\n    },\n    set: function set(origin) {\n      this.super.origin = origin;\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      return this.super.password;\n    },\n    set: function set(password) {\n      this.super.password = password;\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      return this.super.pathname;\n    },\n    set: function set(pathname) {\n      this.super.pathname = pathname;\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      return this.super.port;\n    },\n    set: function set(port) {\n      this.super.port = port;\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this.super.protocol;\n    },\n    set: function set(protocol) {\n      this.super.protocol = protocol;\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      return this.super.search;\n    },\n    set: function set(search) {\n      this.super.search = search;\n    }\n  }, {\n    key: \"searchParams\",\n    get: function get() {\n      return this.super.searchParams;\n    },\n    set: function set(searchParams) {\n      this.super.searchParams = searchParams;\n    }\n  }, {\n    key: \"username\",\n    get: function get() {\n      return this.super.username;\n    },\n    set: function set(username) {\n      this.super.username = username;\n    }\n  }]);\n\n  return URLWithLegacySupport;\n}();\n\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    var url = new URL(obj);\n    return url.toString();\n  }\n\n  if (!(obj instanceof URL)) {\n    var userPass = obj.username && obj.password ? \"\".concat(obj.username, \":\").concat(obj.password, \"@\") : '';\n    var auth = obj.auth ? obj.auth + '@' : '';\n    var port = obj.port ? ':' + obj.port : '';\n    var protocol = obj.protocol ? obj.protocol + '//' : '';\n    var host = obj.host || '';\n    var hostname = obj.hostname || '';\n    var search = obj.search || (obj.query ? '?' + obj.query : '');\n    var hash = obj.hash || '';\n    var pathname = obj.pathname || '';\n    var path = obj.path || pathname + search;\n    return \"\".concat(protocol).concat(userPass || auth).concat(host || hostname + port).concat(path).concat(hash);\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport: URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase: defaultBase,\n  format: format\n};","map":null,"metadata":{},"sourceType":"script"}