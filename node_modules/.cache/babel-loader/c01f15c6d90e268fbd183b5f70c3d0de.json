{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer');\n\nvar PeerId = require('peer-id');\n\nvar PeerInfo = require('peer-info');\n\nmodule.exports = function (send) {\n  return promisify(function (peerId, opts, callback) {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    var handleResult = function handleResult(res, callback) {\n      var peerIds = res.map(function (r) {\n        return new PeerInfo(PeerId.createFromB58String(r.ID));\n      });\n      callback(null, peerIds);\n    };\n\n    send({\n      path: 'dht/query',\n      args: peerId,\n      qs: opts\n    }, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      streamToValueWithTransformer(result, handleResult, callback);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}