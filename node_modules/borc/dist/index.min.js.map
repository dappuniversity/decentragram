{"version":3,"sources":["/Users/dignifiedquire/opensource/borc/webpack/universalModuleDefinition","/Users/dignifiedquire/opensource/borc/webpack/bootstrap","/Users/dignifiedquire/opensource/borc/node_modules/node-libs-browser/node_modules/buffer/index.js","/Users/dignifiedquire/opensource/borc/node_modules/bignumber.js/bignumber.js","/Users/dignifiedquire/opensource/borc/src/constants.js","/Users/dignifiedquire/opensource/borc/src/utils.js","/Users/dignifiedquire/opensource/borc/node_modules/webpack/buildin/global.js","/Users/dignifiedquire/opensource/borc/node_modules/ieee754/index.js","/Users/dignifiedquire/opensource/borc/src/decoder.js","/Users/dignifiedquire/opensource/borc/src/simple.js","/Users/dignifiedquire/opensource/borc/src/tagged.js","/Users/dignifiedquire/opensource/borc/node_modules/iso-url/index.js","/Users/dignifiedquire/opensource/borc/node_modules/iso-url/src/url-browser.js","/Users/dignifiedquire/opensource/borc/src/index.js","/Users/dignifiedquire/opensource/borc/src/diagnose.js","/Users/dignifiedquire/opensource/borc/node_modules/base64-js/index.js","/Users/dignifiedquire/opensource/borc/node_modules/isarray/index.js","/Users/dignifiedquire/opensource/borc/src/decoder.asm.js","/Users/dignifiedquire/opensource/borc/node_modules/iso-url/src/relative.js","/Users/dignifiedquire/opensource/borc/src/encoder.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","globalObject","BigNumber","isNumeric","mathceil","ceil","mathfloor","bignumberError","tooManyDigits","BASE","POWS_TEN","MAX","bitFloor","coeffToString","z","xc","yc","k","intCheck","isOdd","toExponential","charAt","toFixedPoint","zs","clone","configObject","div","convertBase","parseNumeric","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","constructor","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","v","alphabet","caseChanged","isNum","_isBigNumber","test","search","substring","round","DEBUG","toUpperCase","format","rm","id","c0","ne","maxOrMin","args","method","normalise","pop","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","dp","rand","Uint32Array","splice","sum","plus","toBaseOut","baseIn","baseOut","arrL","reverse","sign","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","Bignumber","require","MT","POS_INT","NEG_INT","BYTE_STRING","UTF8_STRING","ARRAY","MAP","TAG","SIMPLE_FLOAT","DATE_STRING","DATE_EPOCH","POS_BIGINT","NEG_BIGINT","DECIMAL_FRAC","BIGFLOAT","BASE64URL_EXPECTED","BASE64_EXPECTED","BASE16_EXPECTED","CBOR","URI","BASE64URL","BASE64","REGEXP","MIME","NUMBYTES","ZERO","TWO","FOUR","EIGHT","INDEFINITE","SIMPLE","FALSE","TRUE","NULL","UNDEFINED","SYMS","PARENT","BREAK","STREAM","SHIFT32","SHIFT16","MAX_SAFE_HIGH","NEG_ONE","TEN","OBJECT","constants","parseHalf","mant","arrayBufferToBignumber","buildMap","Map","keys","buildInt32","f","g","buildInt64","f1","f2","writeHalf","u32","u","s16","keySorter","lenA","lenB","isNegativeZero","nextPowerOf2","count","Function","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","log","LN2","parser","utils","Simple","Tagged","URL","Decoder","opts","_heap","_heap8","_buffer","_reset","_knownTags","assign","0","Date","1","2","3","4","5","32","35","tags","console","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushBreak","_parents","_depth","_currentParent","ref","_closeParent","_push","createTag","createByteString","createUtf8String","values","createMap","createObject","createArray","_dec","hasChildren","_ref","tmpKey","_createParent","_res","tagNumber","typ","raw","createByteStringFromHeap","createInt","createInt32","createInt64","createFloat","createFloatSingle","createFloatDouble","h","createInt32Neg","createInt64Neg","createTrue","createFalse","createNull","createUndefined","createInfinity","createInfinityNeg","createNaN","createNaNNeg","createUtf8StringFromHeap","createSimpleUnassigned","_createArrayStartFixed","len1","len2","len3","len4","_createObjectStartFixed","tag","_decode","input","parse","decodeFirst","decodeAll","enc","decode","encodeCBOR","gen","_pushInt","hasParent","err","JSON","stringify","_pushTag","pushAny","convert","converters","er","error","URLWithLegacySupport","URLSearchParams","defaultBase","relative","self","location","protocol","host","url","super","path","pathname","auth","username","password","query","startsWith","hash","hostname","href","origin","port","searchParams","createObjectURL","revokeObjectURL","userPass","Diagnose","Encoder","diagnose","encode","leveldb","fl","map","reduce","collectObject","acc","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","encodeChunk","lookup","num","output","stdlib","foreign","heap","inputLength","jumpTable","readUInt16","readUInt32","INT_P","octet","UINT_P_8","UINT_P_16","UINT_P_32","UINT_P_64","INT_N","UINT_N_8","UINT_N_16","UINT_N_32","UINT_N_64","step","BYTE_STRING_8","BYTE_STRING_16","BYTE_STRING_32","BYTE_STRING_64","BYTE_STRING_BREAK","UTF8_STRING_8","UTF8_STRING_16","UTF8_STRING_32","UTF8_STRING_64","UTF8_STRING_BREAK","ARRAY_8","ARRAY_16","ARRAY_32","ARRAY_64","ARRAY_BREAK","MAP_8","MAP_16","MAP_32","MAP_64","MAP_BREAK","TAG_KNOWN","TAG_BIGNUM_POS","TAG_BIGNUM_NEG","TAG_FRAC","TAG_BIGNUM_FLOAT","TAG_UNASSIGNED","TAG_BASE64_URL","TAG_BASE64","TAG_BASE16","TAG_MORE_1","TAG_MORE_2","TAG_MORE_4","TAG_MORE_8","SIMPLE_UNASSIGNED","SIMPLE_FALSE","SIMPLE_TRUE","SIMPLE_NULL","SIMPLE_UNDEFINED","SIMPLE_BYTE","SIMPLE_FLOAT_HALF","SIMPLE_FLOAT_SINGLE","SIMPLE_FLOAT_DOUBLE","ERROR","protocolMap","defaultProtocol","urlParsed","HALF","FLOAT","DOUBLE","MAXINT_BN","BUF_NAN","BUF_INF_NEG","BUF_INF_POS","options","streaming","stream","onData","semanticTypes","_pushUrl","_pushBigNumber","addTypes","genTypes","addSemanticType","fun","old","result","resultMethod","resultLength","finalize","pushWrite","_pushUInt8","_pushUInt16BE","_pushUInt32BE","_pushDoubleBE","_pushNaN","_pushInfinity","_pushFloat","b2","b4","mt","orig","MAX_SAFE_INTEGER","_pushIntNum","_pushNumber","_pushString","_pushBoolean","_pushUndefined","_pushArray","_pushDate","_pushBuffer","_pushNoFilter","_pushRegexp","source","_pushSet","_pushBigint","dec","slide","_pushMap","_pushRawMap","_pushObject","keyLength","sort","toType","index"],"mappings":"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A,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAuR,GAEAC,GAEAC,GAEAC,GAEAkC,GACAA,GACAA,GACAjC,GAEA1R,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEA2R,GAEAC,GAEAC,GAEAC,GAEA6B,GACAA,GACAA,GACA5B,GAEA9R,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEA+R,GAEAC,GAEAC,GAEAC,GACAwB,GACAA,GACAA,GAEAvB,GAEAC,GAEAA,GAEAA,GAEAA,GAEAA,GAEAA,GAEAK,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAA,GACAA,GACAA,GAEAI,GACAC,GACAC,GACAC,GACAU,GACAA,GACAA,GACAA,GAEAT,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GACAC,GACAA,GACAA,GAEA3R,IAKF,MAAO,CACLuJ,MAAOA,K,6BCpzCX,MAAM,qBACJkB,EAAoB,OACpB9V,GACE,EAAQ,IAEZ9U,EAAOD,QAAU,CAACqrB,EAAKH,EAAW,GAAI8G,EAAc,GAAIC,KACtD,IAGIC,EAHA/G,EAAWD,EAASC,SAAWD,EAASC,SAAS7a,QAAQ,IAAK,IAAM,OAExE6a,GAAY6G,EAAY7G,IAAa8G,GAAmB9G,GAAY,IAGpE,IACE+G,EAAY,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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Borc\"] = factory();\n\telse\n\t\troot[\"Borc\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\";\n\n;\n\n(function (globalObject) {\n  'use strict';\n  /*\r\n   *      bignumber.js v9.0.0\r\n   *      A JavaScript library for arbitrary-precision arithmetic.\r\n   *      https://github.com/MikeMcl/bignumber.js\r\n   *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *      MIT Licensed.\r\n   *\r\n   *      BigNumber.prototype methods     |  BigNumber methods\r\n   *                                      |\r\n   *      absoluteValue            abs    |  clone\r\n   *      comparedTo                      |  config               set\r\n   *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n   *      dividedBy                div    |      ROUNDING_MODE\r\n   *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n   *      exponentiatedBy          pow    |      RANGE\r\n   *      integerValue                    |      CRYPTO\r\n   *      isEqualTo                eq     |      MODULO_MODE\r\n   *      isFinite                        |      POW_PRECISION\r\n   *      isGreaterThan            gt     |      FORMAT\r\n   *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n   *      isInteger                       |  isBigNumber\r\n   *      isLessThan               lt     |  maximum              max\r\n   *      isLessThanOrEqualTo      lte    |  minimum              min\r\n   *      isNaN                           |  random\r\n   *      isNegative                      |  sum\r\n   *      isPositive                      |\r\n   *      isZero                          |\r\n   *      minus                           |\r\n   *      modulo                   mod    |\r\n   *      multipliedBy             times  |\r\n   *      negated                         |\r\n   *      plus                            |\r\n   *      precision                sd     |\r\n   *      shiftedBy                       |\r\n   *      squareRoot               sqrt   |\r\n   *      toExponential                   |\r\n   *      toFixed                         |\r\n   *      toFormat                        |\r\n   *      toFraction                      |\r\n   *      toJSON                          |\r\n   *      toNumber                        |\r\n   *      toPrecision                     |\r\n   *      toString                        |\r\n   *      valueOf                         |\r\n   *\r\n   */\n\n  var BigNumber,\n      isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\n      mathceil = Math.ceil,\n      mathfloor = Math.floor,\n      bignumberError = '[BigNumber Error] ',\n      tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\n      BASE = 1e14,\n      LOG_BASE = 14,\n      MAX_SAFE_INTEGER = 0x1fffffffffffff,\n      // 2^53 - 1\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\n      SQRT_BASE = 1e7,\n      // EDITABLE\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\n  MAX = 1E9; // 0 to MAX_INT32\n\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\n\n  function clone(configObject) {\n    var div,\n        convertBase,\n        parseNumeric,\n        P = BigNumber.prototype = {\n      constructor: BigNumber,\n      toString: null,\n      valueOf: null\n    },\n        ONE = new BigNumber(1),\n        //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\n    // The default values below must be integers within the inclusive ranges stated.\n    // The values can also be changed at run-time using BigNumber.set.\n    // The maximum number of decimal places for operations involving division.\n    DECIMAL_PLACES = 20,\n        // 0 to MAX\n    // The rounding mode used when rounding to the above decimal places, and when using\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\n    // UP         0 Away from zero.\n    // DOWN       1 Towards zero.\n    // CEIL       2 Towards +Infinity.\n    // FLOOR      3 Towards -Infinity.\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n    ROUNDING_MODE = 4,\n        // 0 to 8\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\n    // The exponent value at and beneath which toString returns exponential notation.\n    // Number type: -7\n    TO_EXP_NEG = -7,\n        // 0 to -MAX\n    // The exponent value at and above which toString returns exponential notation.\n    // Number type: 21\n    TO_EXP_POS = 21,\n        // 0 to MAX\n    // RANGE : [MIN_EXP, MAX_EXP]\n    // The minimum exponent value, beneath which underflow to zero occurs.\n    // Number type: -324  (5e-324)\n    MIN_EXP = -1e7,\n        // -1 to -MAX\n    // The maximum exponent value, above which overflow to Infinity occurs.\n    // Number type:  308  (1.7976931348623157e+308)\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\n    MAX_EXP = 1e7,\n        // 1 to MAX\n    // Whether to use cryptographically-secure random number generation, if available.\n    CRYPTO = false,\n        // true or false\n    // The modulo mode used when calculating the modulus: a mod n.\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n    // The remainder (r) is calculated as: r = a - n * q.\n    //\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\n    // DOWN      1 The remainder has the same sign as the dividend.\n    //             This modulo mode is commonly known as 'truncated division' and is\n    //             equivalent to (a % n) in JavaScript.\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\n    //             The remainder is always positive.\n    //\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\n    // modes are commonly used for the modulus operation.\n    // Although the other rounding modes can also be used, they may not give useful results.\n    MODULO_MODE = 1,\n        // 0 to 9\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\n    POW_PRECISION = 0,\n        // 0 to MAX\n    // The format specification used by the BigNumber.prototype.toFormat method.\n    FORMAT = {\n      prefix: '',\n      groupSize: 3,\n      secondaryGroupSize: 0,\n      groupSeparator: ',',\n      decimalSeparator: '.',\n      fractionGroupSize: 0,\n      fractionGroupSeparator: '\\xA0',\n      // non-breaking space\n      suffix: ''\n    },\n        // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\n    // '-', '.', whitespace, or repeated character.\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz'; //------------------------------------------------------------------------------------------\n    // CONSTRUCTOR\n\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\n\n    function BigNumber(v, b) {\n      var alphabet,\n          c,\n          caseChanged,\n          e,\n          i,\n          isNum,\n          len,\n          str,\n          x = this; // Enable constructor call without `new`.\n\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\n\n      if (b == null) {\n        if (v && v._isBigNumber === true) {\n          x.s = v.s;\n\n          if (!v.c || v.e > MAX_EXP) {\n            x.c = x.e = null;\n          } else if (v.e < MIN_EXP) {\n            x.c = [x.e = 0];\n          } else {\n            x.e = v.e;\n            x.c = v.c.slice();\n          }\n\n          return;\n        }\n\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\n          // Use `1 / n` to handle minus zero also.\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1; // Fast path for integers, where n < 2147483648 (2**31).\n\n          if (v === ~~v) {\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\n\n            if (e > MAX_EXP) {\n              x.c = x.e = null;\n            } else {\n              x.e = e;\n              x.c = [v];\n            }\n\n            return;\n          }\n\n          str = String(v);\n        } else {\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\n        } // Decimal point?\n\n\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', ''); // Exponential form?\n\n        if ((i = str.search(/e/i)) > 0) {\n          // Determine exponent.\n          if (e < 0) e = i;\n          e += +str.slice(i + 1);\n          str = str.substring(0, i);\n        } else if (e < 0) {\n          // Integer.\n          e = str.length;\n        }\n      } else {\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\n        intCheck(b, 2, ALPHABET.length, 'Base'); // Allow exponential notation to be used with base 10 argument, while\n        // also rounding to DECIMAL_PLACES as with other bases.\n\n        if (b == 10) {\n          x = new BigNumber(v);\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\n        }\n\n        str = String(v);\n\n        if (isNum = typeof v == 'number') {\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\n            throw Error(tooManyDigits + v);\n          }\n        } else {\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\n        }\n\n        alphabet = ALPHABET.slice(0, b);\n        e = i = 0; // Check that str is a valid base b number.\n        // Don't use RegExp, so alphabet can contain special characters.\n\n        for (len = str.length; i < len; i++) {\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\n            if (c == '.') {\n              // If '.' is not the first character and it has not be found before.\n              if (i > e) {\n                e = len;\n                continue;\n              }\n            } else if (!caseChanged) {\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {\n                caseChanged = true;\n                i = -1;\n                e = 0;\n                continue;\n              }\n            }\n\n            return parseNumeric(x, String(v), isNum, b);\n          }\n        } // Prevent later check for length on converted number.\n\n\n        isNum = false;\n        str = convertBase(str, b, 10, x.s); // Decimal point?\n\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;\n      } // Determine leading zeros.\n\n\n      for (i = 0; str.charCodeAt(i) === 48; i++); // Determine trailing zeros.\n\n\n      for (len = str.length; str.charCodeAt(--len) === 48;);\n\n      if (str = str.slice(i, ++len)) {\n        len -= i; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n\n        if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\n          throw Error(tooManyDigits + x.s * v);\n        } // Overflow?\n\n\n        if ((e = e - i - 1) > MAX_EXP) {\n          // Infinity.\n          x.c = x.e = null; // Underflow?\n        } else if (e < MIN_EXP) {\n          // Zero.\n          x.c = [x.e = 0];\n        } else {\n          x.e = e;\n          x.c = []; // Transform base\n          // e is the base 10 exponent.\n          // i is where to slice str to get the first element of the coefficient array.\n\n          i = (e + 1) % LOG_BASE;\n          if (e < 0) i += LOG_BASE; // i < 1\n\n          if (i < len) {\n            if (i) x.c.push(+str.slice(0, i));\n\n            for (len -= LOG_BASE; i < len;) {\n              x.c.push(+str.slice(i, i += LOG_BASE));\n            }\n\n            i = LOG_BASE - (str = str.slice(i)).length;\n          } else {\n            i -= len;\n          }\n\n          for (; i--; str += '0');\n\n          x.c.push(+str);\n        }\n      } else {\n        // Zero.\n        x.c = [x.e = 0];\n      }\n    } // CONSTRUCTOR PROPERTIES\n\n\n    BigNumber.clone = clone;\n    BigNumber.ROUND_UP = 0;\n    BigNumber.ROUND_DOWN = 1;\n    BigNumber.ROUND_CEIL = 2;\n    BigNumber.ROUND_FLOOR = 3;\n    BigNumber.ROUND_HALF_UP = 4;\n    BigNumber.ROUND_HALF_DOWN = 5;\n    BigNumber.ROUND_HALF_EVEN = 6;\n    BigNumber.ROUND_HALF_CEIL = 7;\n    BigNumber.ROUND_HALF_FLOOR = 8;\n    BigNumber.EUCLID = 9;\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\n\n    BigNumber.config = BigNumber.set = function (obj) {\n      var p, v;\n\n      if (obj != null) {\n        if (typeof obj == 'object') {\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\n            v = obj[p];\n            intCheck(v, 0, MAX, p);\n            DECIMAL_PLACES = v;\n          } // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\n            v = obj[p];\n            intCheck(v, 0, 8, p);\n            ROUNDING_MODE = v;\n          } // EXPONENTIAL_AT {number|number[]}\n          // Integer, -MAX to MAX inclusive or\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\n            v = obj[p];\n\n            if (v && v.pop) {\n              intCheck(v[0], -MAX, 0, p);\n              intCheck(v[1], 0, MAX, p);\n              TO_EXP_NEG = v[0];\n              TO_EXP_POS = v[1];\n            } else {\n              intCheck(v, -MAX, MAX, p);\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\n            }\n          } // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'RANGE')) {\n            v = obj[p];\n\n            if (v && v.pop) {\n              intCheck(v[0], -MAX, -1, p);\n              intCheck(v[1], 1, MAX, p);\n              MIN_EXP = v[0];\n              MAX_EXP = v[1];\n            } else {\n              intCheck(v, -MAX, MAX, p);\n\n              if (v) {\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\n              } else {\n                throw Error(bignumberError + p + ' cannot be zero: ' + v);\n              }\n            }\n          } // CRYPTO {boolean} true or false.\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\n          // '[BigNumber Error] crypto unavailable'\n\n\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\n            v = obj[p];\n\n            if (v === !!v) {\n              if (v) {\n                if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n                  CRYPTO = v;\n                } else {\n                  CRYPTO = !v;\n                  throw Error(bignumberError + 'crypto unavailable');\n                }\n              } else {\n                CRYPTO = v;\n              }\n            } else {\n              throw Error(bignumberError + p + ' not true or false: ' + v);\n            }\n          } // MODULO_MODE {number} Integer, 0 to 9 inclusive.\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\n            v = obj[p];\n            intCheck(v, 0, 9, p);\n            MODULO_MODE = v;\n          } // POW_PRECISION {number} Integer, 0 to MAX inclusive.\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\n            v = obj[p];\n            intCheck(v, 0, MAX, p);\n            POW_PRECISION = v;\n          } // FORMAT {object}\n          // '[BigNumber Error] FORMAT not an object: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\n            v = obj[p];\n            if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);\n          } // ALPHABET {string}\n          // '[BigNumber Error] ALPHABET invalid: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\n            v = obj[p]; // Disallow if only one character,\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\n\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\n              ALPHABET = v;\n            } else {\n              throw Error(bignumberError + p + ' invalid: ' + v);\n            }\n          }\n        } else {\n          // '[BigNumber Error] Object expected: {v}'\n          throw Error(bignumberError + 'Object expected: ' + obj);\n        }\n      }\n\n      return {\n        DECIMAL_PLACES: DECIMAL_PLACES,\n        ROUNDING_MODE: ROUNDING_MODE,\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\n        RANGE: [MIN_EXP, MAX_EXP],\n        CRYPTO: CRYPTO,\n        MODULO_MODE: MODULO_MODE,\n        POW_PRECISION: POW_PRECISION,\n        FORMAT: FORMAT,\n        ALPHABET: ALPHABET\n      };\n    };\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\n\n\n    BigNumber.isBigNumber = function (v) {\n      if (!v || v._isBigNumber !== true) return false;\n      if (!BigNumber.DEBUG) return true;\n      var i,\n          n,\n          c = v.c,\n          e = v.e,\n          s = v.s;\n\n      out: if ({}.toString.call(c) == '[object Array]') {\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\n          // If the first element is zero, the BigNumber value must be zero.\n          if (c[0] === 0) {\n            if (e === 0 && c.length === 1) return true;\n            break out;\n          } // Calculate number of digits that c[0] should have, based on the exponent.\n\n\n          i = (e + 1) % LOG_BASE;\n          if (i < 1) i += LOG_BASE; // Calculate number of digits of c[0].\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\n\n          if (String(c[0]).length == i) {\n            for (i = 0; i < c.length; i++) {\n              n = c[i];\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\n            } // Last element cannot be zero, unless it is the only element.\n\n\n            if (n !== 0) return true;\n          }\n        } // Infinity/NaN\n\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\n        return true;\n      }\n\n      throw Error(bignumberError + 'Invalid BigNumber: ' + v);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.maximum = BigNumber.max = function () {\n      return maxOrMin(arguments, P.lt);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.minimum = BigNumber.min = function () {\n      return maxOrMin(arguments, P.gt);\n    };\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\n\n\n    BigNumber.random = function () {\n      var pow2_53 = 0x20000000000000; // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\n      // Check if Math.random() produces more than 32 bits of randomness.\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\n\n      var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {\n        return mathfloor(Math.random() * pow2_53);\n      } : function () {\n        return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);\n      };\n      return function (dp) {\n        var a,\n            b,\n            e,\n            k,\n            v,\n            i = 0,\n            c = [],\n            rand = new BigNumber(ONE);\n        if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);\n        k = mathceil(dp / LOG_BASE);\n\n        if (CRYPTO) {\n          // Browsers supporting crypto.getRandomValues.\n          if (crypto.getRandomValues) {\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\n\n            for (; i < k;) {\n              // 53 bits:\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\n              //                                     11111 11111111 11111111\n              // 0x20000 is 2^21.\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11); // Rejection sampling:\n              // 0 <= v < 9007199254740992\n              // Probability that v >= 9e15, is\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\n\n              if (v >= 9e15) {\n                b = crypto.getRandomValues(new Uint32Array(2));\n                a[i] = b[0];\n                a[i + 1] = b[1];\n              } else {\n                // 0 <= v <= 8999999999999999\n                // 0 <= (v % 1e14) <= 99999999999999\n                c.push(v % 1e14);\n                i += 2;\n              }\n            }\n\n            i = k / 2; // Node.js supporting crypto.randomBytes.\n          } else if (crypto.randomBytes) {\n            // buffer\n            a = crypto.randomBytes(k *= 7);\n\n            for (; i < k;) {\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\n              // 0 <= v < 9007199254740992\n              v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\n\n              if (v >= 9e15) {\n                crypto.randomBytes(7).copy(a, i);\n              } else {\n                // 0 <= (v % 1e14) <= 99999999999999\n                c.push(v % 1e14);\n                i += 7;\n              }\n            }\n\n            i = k / 7;\n          } else {\n            CRYPTO = false;\n            throw Error(bignumberError + 'crypto unavailable');\n          }\n        } // Use Math.random.\n\n\n        if (!CRYPTO) {\n          for (; i < k;) {\n            v = random53bitInt();\n            if (v < 9e15) c[i++] = v % 1e14;\n          }\n        }\n\n        k = c[--i];\n        dp %= LOG_BASE; // Convert trailing digits to zeros according to dp.\n\n        if (k && dp) {\n          v = POWS_TEN[LOG_BASE - dp];\n          c[i] = mathfloor(k / v) * v;\n        } // Remove trailing elements which are zero.\n\n\n        for (; c[i] === 0; c.pop(), i--); // Zero?\n\n\n        if (i < 0) {\n          c = [e = 0];\n        } else {\n          // Remove leading elements which are zero and adjust exponent accordingly.\n          for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE); // Count the digits of the first element of c to determine leading zeros, and...\n\n\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++); // adjust the exponent accordingly.\n\n\n          if (i < LOG_BASE) e -= LOG_BASE - i;\n        }\n\n        rand.e = e;\n        rand.c = c;\n        return rand;\n      };\n    }();\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.sum = function () {\n      var i = 1,\n          args = arguments,\n          sum = new BigNumber(args[0]);\n\n      for (; i < args.length;) sum = sum.plus(args[i++]);\n\n      return sum;\n    }; // PRIVATE FUNCTIONS\n    // Called by BigNumber and BigNumber.prototype.toString.\n\n\n    convertBase = function () {\n      var decimal = '0123456789';\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\n\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\n        var j,\n            arr = [0],\n            arrL,\n            i = 0,\n            len = str.length;\n\n        for (; i < len;) {\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\n\n          arr[0] += alphabet.indexOf(str.charAt(i++));\n\n          for (j = 0; j < arr.length; j++) {\n            if (arr[j] > baseOut - 1) {\n              if (arr[j + 1] == null) arr[j + 1] = 0;\n              arr[j + 1] += arr[j] / baseOut | 0;\n              arr[j] %= baseOut;\n            }\n          }\n        }\n\n        return arr.reverse();\n      } // Convert a numeric string of baseIn to a numeric string of baseOut.\n      // If the caller is toString, we are converting from base 10 to baseOut.\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\n\n\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\n        var alphabet,\n            d,\n            e,\n            k,\n            r,\n            x,\n            xc,\n            y,\n            i = str.indexOf('.'),\n            dp = DECIMAL_PLACES,\n            rm = ROUNDING_MODE; // Non-integer.\n\n        if (i >= 0) {\n          k = POW_PRECISION; // Unlimited precision.\n\n          POW_PRECISION = 0;\n          str = str.replace('.', '');\n          y = new BigNumber(baseIn);\n          x = y.pow(str.length - i);\n          POW_PRECISION = k; // Convert str as if an integer, then restore the fraction part by dividing the\n          // result by its base raised to a power.\n\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);\n          y.e = y.c.length;\n        } // Convert the number as integer.\n\n\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET)); // xc now represents str as an integer and converted to baseOut. e is the exponent.\n\n        e = k = xc.length; // Remove trailing zeros.\n\n        for (; xc[--k] == 0; xc.pop()); // Zero?\n\n\n        if (!xc[0]) return alphabet.charAt(0); // Does str represent an integer? If so, no need for the division.\n\n        if (i < 0) {\n          --e;\n        } else {\n          x.c = xc;\n          x.e = e; // The sign is needed for correct rounding.\n\n          x.s = sign;\n          x = div(x, y, dp, rm, baseOut);\n          xc = x.c;\n          r = x.r;\n          e = x.e;\n        } // xc now represents str converted to baseOut.\n        // THe index of the rounding digit.\n\n\n        d = e + dp + 1; // The rounding digit: the digit to the right of the digit that may be rounded up.\n\n        i = xc[d]; // Look at the rounding digits and mode to determine whether to round up.\n\n        k = baseOut / 2;\n        r = r || d < 0 || xc[d + 1] != null;\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7)); // If the index of the rounding digit is not greater than zero, or xc represents\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\n        // such as 0.00001.\n\n        if (d < 1 || !xc[0]) {\n          // 1^-dp or 0\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\n        } else {\n          // Truncate xc to the required number of decimal places.\n          xc.length = d; // Round up?\n\n          if (r) {\n            // Rounding up may mean the previous digit has to be rounded up and so on.\n            for (--baseOut; ++xc[--d] > baseOut;) {\n              xc[d] = 0;\n\n              if (!d) {\n                ++e;\n                xc = [1].concat(xc);\n              }\n            }\n          } // Determine trailing zeros.\n\n\n          for (k = xc.length; !xc[--k];); // E.g. [4, 11, 15] becomes 4bf.\n\n\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])); // Add leading zeros, decimal point and trailing zeros as required.\n\n\n          str = toFixedPoint(str, e, alphabet.charAt(0));\n        } // The caller will add the sign.\n\n\n        return str;\n      };\n    }(); // Perform division in the specified base. Called by div and convertBase.\n\n\n    div = function () {\n      // Assume non-zero x and k.\n      function multiply(x, k, base) {\n        var m,\n            temp,\n            xlo,\n            xhi,\n            carry = 0,\n            i = x.length,\n            klo = k % SQRT_BASE,\n            khi = k / SQRT_BASE | 0;\n\n        for (x = x.slice(); i--;) {\n          xlo = x[i] % SQRT_BASE;\n          xhi = x[i] / SQRT_BASE | 0;\n          m = khi * xlo + xhi * klo;\n          temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\n          x[i] = temp % base;\n        }\n\n        if (carry) x = [carry].concat(x);\n        return x;\n      }\n\n      function compare(a, b, aL, bL) {\n        var i, cmp;\n\n        if (aL != bL) {\n          cmp = aL > bL ? 1 : -1;\n        } else {\n          for (i = cmp = 0; i < aL; i++) {\n            if (a[i] != b[i]) {\n              cmp = a[i] > b[i] ? 1 : -1;\n              break;\n            }\n          }\n        }\n\n        return cmp;\n      }\n\n      function subtract(a, b, aL, base) {\n        var i = 0; // Subtract b from a.\n\n        for (; aL--;) {\n          a[aL] -= i;\n          i = a[aL] < b[aL] ? 1 : 0;\n          a[aL] = i * base + a[aL] - b[aL];\n        } // Remove leading zeros.\n\n\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\n      } // x: dividend, y: divisor.\n\n\n      return function (x, y, dp, rm, base) {\n        var cmp,\n            e,\n            i,\n            more,\n            n,\n            prod,\n            prodL,\n            q,\n            qc,\n            rem,\n            remL,\n            rem0,\n            xi,\n            xL,\n            yc0,\n            yL,\n            yz,\n            s = x.s == y.s ? 1 : -1,\n            xc = x.c,\n            yc = y.c; // Either NaN, Infinity or 0?\n\n        if (!xc || !xc[0] || !yc || !yc[0]) {\n          return new BigNumber( // Return NaN if either NaN, or both Infinity or 0.\n          !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0);\n        }\n\n        q = new BigNumber(s);\n        qc = q.c = [];\n        e = x.e - y.e;\n        s = dp + e + 1;\n\n        if (!base) {\n          base = BASE;\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\n          s = s / LOG_BASE | 0;\n        } // Result exponent may be one less then the current value of e.\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\n\n\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\n\n        if (yc[i] > (xc[i] || 0)) e--;\n\n        if (s < 0) {\n          qc.push(1);\n          more = true;\n        } else {\n          xL = xc.length;\n          yL = yc.length;\n          i = 0;\n          s += 2; // Normalise xc and yc so highest order digit of yc is >= base / 2.\n\n          n = mathfloor(base / (yc[0] + 1)); // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\n\n          if (n > 1) {\n            yc = multiply(yc, n, base);\n            xc = multiply(xc, n, base);\n            yL = yc.length;\n            xL = xc.length;\n          }\n\n          xi = yL;\n          rem = xc.slice(0, yL);\n          remL = rem.length; // Add zeros to make remainder as long as divisor.\n\n          for (; remL < yL; rem[remL++] = 0);\n\n          yz = yc.slice();\n          yz = [0].concat(yz);\n          yc0 = yc[0];\n          if (yc[1] >= base / 2) yc0++; // Not necessary, but to prevent trial digit n > base, when using base 3.\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\n\n          do {\n            n = 0; // Compare divisor and remainder.\n\n            cmp = compare(yc, rem, yL, remL); // If divisor < remainder.\n\n            if (cmp < 0) {\n              // Calculate trial digit, n.\n              rem0 = rem[0];\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0); // n is how many times the divisor goes into the current remainder.\n\n              n = mathfloor(rem0 / yc0); //  Algorithm:\n              //  product = divisor multiplied by trial digit (n).\n              //  Compare product and remainder.\n              //  If product is greater than remainder:\n              //    Subtract divisor from product, decrement trial digit.\n              //  Subtract product from remainder.\n              //  If product was less than remainder at the last compare:\n              //    Compare new remainder and divisor.\n              //    If remainder is greater than divisor:\n              //      Subtract divisor from remainder, increment trial digit.\n\n              if (n > 1) {\n                // n may be > base only when base is 3.\n                if (n >= base) n = base - 1; // product = divisor * trial digit.\n\n                prod = multiply(yc, n, base);\n                prodL = prod.length;\n                remL = rem.length; // Compare product and remainder.\n                // If product > remainder then trial digit n too high.\n                // n is 1 too high about 5% of the time, and is not known to have\n                // ever been more than 1 too high.\n\n                while (compare(prod, rem, prodL, remL) == 1) {\n                  n--; // Subtract divisor from product.\n\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\n                  prodL = prod.length;\n                  cmp = 1;\n                }\n              } else {\n                // n is 0 or 1, cmp is -1.\n                // If n is 0, there is no need to compare yc and rem again below,\n                // so change cmp to 1 to avoid it.\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\n                if (n == 0) {\n                  // divisor < remainder, so n must be at least 1.\n                  cmp = n = 1;\n                } // product = divisor\n\n\n                prod = yc.slice();\n                prodL = prod.length;\n              }\n\n              if (prodL < remL) prod = [0].concat(prod); // Subtract product from remainder.\n\n              subtract(rem, prod, remL, base);\n              remL = rem.length; // If product was < remainder.\n\n              if (cmp == -1) {\n                // Compare divisor and new remainder.\n                // If divisor < new remainder, subtract divisor from remainder.\n                // Trial digit n too low.\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\n                while (compare(yc, rem, yL, remL) < 1) {\n                  n++; // Subtract divisor from remainder.\n\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\n                  remL = rem.length;\n                }\n              }\n            } else if (cmp === 0) {\n              n++;\n              rem = [0];\n            } // else cmp === 1 and n will be 0\n            // Add the next digit, n, to the result array.\n\n\n            qc[i++] = n; // Update the remainder.\n\n            if (rem[0]) {\n              rem[remL++] = xc[xi] || 0;\n            } else {\n              rem = [xc[xi]];\n              remL = 1;\n            }\n          } while ((xi++ < xL || rem[0] != null) && s--);\n\n          more = rem[0] != null; // Leading zero?\n\n          if (!qc[0]) qc.splice(0, 1);\n        }\n\n        if (base == BASE) {\n          // To calculate q.e, first get the number of digits of qc[0].\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\n\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more); // Caller is convertBase.\n        } else {\n          q.e = e;\n          q.r = +more;\n        }\n\n        return q;\n      };\n    }();\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\n\n\n    function format(n, i, rm, id) {\n      var c0, e, ne, len, str;\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      if (!n.c) return n.toString();\n      c0 = n.c[0];\n      ne = n.e;\n\n      if (i == null) {\n        str = coeffToString(n.c);\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');\n      } else {\n        n = round(new BigNumber(n), i, rm); // n.e may have changed if the value was rounded up.\n\n        e = n.e;\n        str = coeffToString(n.c);\n        len = str.length; // toPrecision returns exponential notation if the number of significant digits\n        // specified is less than the number of digits necessary to represent the integer\n        // part of the value in fixed-point notation.\n        // Exponential notation.\n\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\n          // Append zeros?\n          for (; len < i; str += '0', len++);\n\n          str = toExponential(str, e); // Fixed-point notation.\n        } else {\n          i -= ne;\n          str = toFixedPoint(str, e, '0'); // Append zeros?\n\n          if (e + 1 > len) {\n            if (--i > 0) for (str += '.'; i--; str += '0');\n          } else {\n            i += e - len;\n\n            if (i > 0) {\n              if (e + 1 == len) str += '.';\n\n              for (; i--; str += '0');\n            }\n          }\n        }\n      }\n\n      return n.s < 0 && c0 ? '-' + str : str;\n    } // Handle BigNumber.max and BigNumber.min.\n\n\n    function maxOrMin(args, method) {\n      var n,\n          i = 1,\n          m = new BigNumber(args[0]);\n\n      for (; i < args.length; i++) {\n        n = new BigNumber(args[i]); // If any number is NaN, return NaN.\n\n        if (!n.s) {\n          m = n;\n          break;\n        } else if (method.call(m, n)) {\n          m = n;\n        }\n      }\n\n      return m;\n    }\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\n\n\n    function normalise(n, c, e) {\n      var i = 1,\n          j = c.length; // Remove trailing zeros.\n\n      for (; !c[--j]; c.pop()); // Calculate the base 10 exponent. First get the number of digits of c[0].\n\n\n      for (j = c[0]; j >= 10; j /= 10, i++); // Overflow?\n\n\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\n        // Infinity.\n        n.c = n.e = null; // Underflow?\n      } else if (e < MIN_EXP) {\n        // Zero.\n        n.c = [n.e = 0];\n      } else {\n        n.e = e;\n        n.c = c;\n      }\n\n      return n;\n    } // Handle values that fail the validity test in BigNumber.\n\n\n    parseNumeric = function () {\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\n          dotAfter = /^([^.]+)\\.$/,\n          dotBefore = /^\\.([^.]+)$/,\n          isInfinityOrNaN = /^-?(Infinity|NaN)$/,\n          whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\n      return function (x, str, isNum, b) {\n        var base,\n            s = isNum ? str : str.replace(whitespaceOrPlus, ''); // No exception on ±Infinity or NaN.\n\n        if (isInfinityOrNaN.test(s)) {\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\n        } else {\n          if (!isNum) {\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\n            s = s.replace(basePrefix, function (m, p1, p2) {\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\n              return !b || b == base ? p1 : m;\n            });\n\n            if (b) {\n              base = b; // E.g. '1.' to '1', '.1' to '0.1'\n\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\n            }\n\n            if (str != s) return new BigNumber(s, base);\n          } // '[BigNumber Error] Not a number: {n}'\n          // '[BigNumber Error] Not a base {b} number: {n}'\n\n\n          if (BigNumber.DEBUG) {\n            throw Error(bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\n          } // NaN\n\n\n          x.s = null;\n        }\n\n        x.c = x.e = null;\n      };\n    }();\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\n\n\n    function round(x, sd, rm, r) {\n      var d,\n          i,\n          j,\n          k,\n          n,\n          ni,\n          rd,\n          xc = x.c,\n          pows10 = POWS_TEN; // if x is not Infinity or NaN...\n\n      if (xc) {\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\n        // ni is the index of n within x.c.\n        // d is the number of digits of n.\n        // i is the index of rd within n including leading zeros.\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\n        out: {\n          // Get the number of digits of the first element of xc.\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\n\n          i = sd - d; // If the rounding digit is in the first element of xc...\n\n          if (i < 0) {\n            i += LOG_BASE;\n            j = sd;\n            n = xc[ni = 0]; // Get the rounding digit at index j of n.\n\n            rd = n / pows10[d - j - 1] % 10 | 0;\n          } else {\n            ni = mathceil((i + 1) / LOG_BASE);\n\n            if (ni >= xc.length) {\n              if (r) {\n                // Needed by sqrt.\n                for (; xc.length <= ni; xc.push(0));\n\n                n = rd = 0;\n                d = 1;\n                i %= LOG_BASE;\n                j = i - LOG_BASE + 1;\n              } else {\n                break out;\n              }\n            } else {\n              n = k = xc[ni]; // Get the number of digits of n.\n\n              for (d = 1; k >= 10; k /= 10, d++); // Get the index of rd within n.\n\n\n              i %= LOG_BASE; // Get the index of rd within n, adjusted for leading zeros.\n              // The number of leading zeros of n is given by LOG_BASE - d.\n\n              j = i - LOG_BASE + d; // Get the rounding digit at index j of n.\n\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\n            }\n          }\n\n          r = r || sd < 0 || // Are there any non-zero digits after the rounding digit?\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\n          xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\n          r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.\n          (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n\n          if (sd < 1 || !xc[0]) {\n            xc.length = 0;\n\n            if (r) {\n              // Convert sd to decimal places.\n              sd -= x.e + 1; // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\n              x.e = -sd || 0;\n            } else {\n              // Zero.\n              xc[0] = x.e = 0;\n            }\n\n            return x;\n          } // Remove excess digits.\n\n\n          if (i == 0) {\n            xc.length = ni;\n            k = 1;\n            ni--;\n          } else {\n            xc.length = ni + 1;\n            k = pows10[LOG_BASE - i]; // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n            // j > 0 means i > number of leading zeros of n.\n\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\n          } // Round up?\n\n\n          if (r) {\n            for (;;) {\n              // If the digit to be rounded up is in the first element of xc...\n              if (ni == 0) {\n                // i will be the length of xc[0] before k is added.\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\n\n                j = xc[0] += k;\n\n                for (k = 1; j >= 10; j /= 10, k++); // if i != k the length has increased.\n\n\n                if (i != k) {\n                  x.e++;\n                  if (xc[0] == BASE) xc[0] = 1;\n                }\n\n                break;\n              } else {\n                xc[ni] += k;\n                if (xc[ni] != BASE) break;\n                xc[ni--] = 0;\n                k = 1;\n              }\n            }\n          } // Remove trailing zeros.\n\n\n          for (i = xc.length; xc[--i] === 0; xc.pop());\n        } // Overflow? Infinity.\n\n\n        if (x.e > MAX_EXP) {\n          x.c = x.e = null; // Underflow? Zero.\n        } else if (x.e < MIN_EXP) {\n          x.c = [x.e = 0];\n        }\n      }\n\n      return x;\n    }\n\n    function valueOf(n) {\n      var str,\n          e = n.e;\n      if (e === null) return n.toString();\n      str = coeffToString(n.c);\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');\n      return n.s < 0 ? '-' + str : str;\n    } // PROTOTYPE/INSTANCE METHODS\n\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\n\n\n    P.absoluteValue = P.abs = function () {\n      var x = new BigNumber(this);\n      if (x.s < 0) x.s = 1;\n      return x;\n    };\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\n\n\n    P.comparedTo = function (y, b) {\n      return compare(this, new BigNumber(y, b));\n    };\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.decimalPlaces = P.dp = function (dp, rm) {\n      var c,\n          n,\n          v,\n          x = this;\n\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n        return round(new BigNumber(x), dp + x.e + 1, rm);\n      }\n\n      if (!(c = x.c)) return null;\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE; // Subtract the number of trailing zeros of the last number.\n\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\n      if (n < 0) n = 0;\n      return n;\n    };\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\n\n\n    P.dividedBy = P.div = function (y, b) {\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\n\n\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\n      return div(this, new BigNumber(y, b), 0, 1);\n    };\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\n\n\n    P.exponentiatedBy = P.pow = function (n, m) {\n      var half,\n          isModExp,\n          i,\n          k,\n          more,\n          nIsBig,\n          nIsNeg,\n          nIsOdd,\n          y,\n          x = this;\n      n = new BigNumber(n); // Allow NaN and ±Infinity, but not other non-integers.\n\n      if (n.c && !n.isInteger()) {\n        throw Error(bignumberError + 'Exponent not an integer: ' + valueOf(n));\n      }\n\n      if (m != null) m = new BigNumber(m); // Exponent of MAX_SAFE_INTEGER is 15.\n\n      nIsBig = n.e > 14; // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\n\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\n        // The sign of the result of pow when x is negative depends on the evenness of n.\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\n        return m ? y.mod(m) : y;\n      }\n\n      nIsNeg = n.s < 0;\n\n      if (m) {\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\n        if (isModExp) x = x.mod(m); // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\n        // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 // [1, 240000000]\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 // [80000000000000]  [99999750000000]\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\n        // If x is negative and n is odd, k = -0, else k = 0.\n        k = x.s < 0 && isOdd(n) ? -0 : 0; // If x >= 1, k = ±Infinity.\n\n        if (x.e > -1) k = 1 / k; // If n is negative return ±0, else return ±Infinity.\n\n        return new BigNumber(nIsNeg ? 1 / k : k);\n      } else if (POW_PRECISION) {\n        // Truncating each coefficient array to a length of k after each multiplication\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\n        // i.e. there will be a minimum of 28 guard digits retained.\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\n      }\n\n      if (nIsBig) {\n        half = new BigNumber(0.5);\n        if (nIsNeg) n.s = 1;\n        nIsOdd = isOdd(n);\n      } else {\n        i = Math.abs(+valueOf(n));\n        nIsOdd = i % 2;\n      }\n\n      y = new BigNumber(ONE); // Performs 54 loop iterations for n of 9007199254740991.\n\n      for (;;) {\n        if (nIsOdd) {\n          y = y.times(x);\n          if (!y.c) break;\n\n          if (k) {\n            if (y.c.length > k) y.c.length = k;\n          } else if (isModExp) {\n            y = y.mod(m); //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\n          }\n        }\n\n        if (i) {\n          i = mathfloor(i / 2);\n          if (i === 0) break;\n          nIsOdd = i % 2;\n        } else {\n          n = n.times(half);\n          round(n, n.e + 1, 1);\n\n          if (n.e > 14) {\n            nIsOdd = isOdd(n);\n          } else {\n            i = +valueOf(n);\n            if (i === 0) break;\n            nIsOdd = i % 2;\n          }\n        }\n\n        x = x.times(x);\n\n        if (k) {\n          if (x.c && x.c.length > k) x.c.length = k;\n        } else if (isModExp) {\n          x = x.mod(m); //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\n        }\n      }\n\n      if (isModExp) return y;\n      if (nIsNeg) y = ONE.div(y);\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\n\n\n    P.integerValue = function (rm) {\n      var n = new BigNumber(this);\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      return round(n, n.e + 1, rm);\n    };\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isEqualTo = P.eq = function (y, b) {\n      return compare(this, new BigNumber(y, b)) === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\n\n\n    P.isFinite = function () {\n      return !!this.c;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isGreaterThan = P.gt = function (y, b) {\n      return compare(this, new BigNumber(y, b)) > 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\n\n\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\n\n\n    P.isInteger = function () {\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isLessThan = P.lt = function (y, b) {\n      return compare(this, new BigNumber(y, b)) < 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\n\n\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\n\n\n    P.isNaN = function () {\n      return !this.s;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\n\n\n    P.isNegative = function () {\n      return this.s < 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\n\n\n    P.isPositive = function () {\n      return this.s > 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\n\n\n    P.isZero = function () {\n      return !!this.c && this.c[0] == 0;\n    };\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\n\n\n    P.minus = function (y, b) {\n      var i,\n          j,\n          t,\n          xLTy,\n          x = this,\n          a = x.s;\n      y = new BigNumber(y, b);\n      b = y.s; // Either NaN?\n\n      if (!a || !b) return new BigNumber(NaN); // Signs differ?\n\n      if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n      }\n\n      var xe = x.e / LOG_BASE,\n          ye = y.e / LOG_BASE,\n          xc = x.c,\n          yc = y.c;\n\n      if (!xe || !ye) {\n        // Either Infinity?\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN); // Either zero?\n\n        if (!xc[0] || !yc[0]) {\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\n          ROUNDING_MODE == 3 ? -0 : 0);\n        }\n      }\n\n      xe = bitFloor(xe);\n      ye = bitFloor(ye);\n      xc = xc.slice(); // Determine which is the bigger number.\n\n      if (a = xe - ye) {\n        if (xLTy = a < 0) {\n          a = -a;\n          t = xc;\n        } else {\n          ye = xe;\n          t = yc;\n        }\n\n        t.reverse(); // Prepend zeros to equalise exponents.\n\n        for (b = a; b--; t.push(0));\n\n        t.reverse();\n      } else {\n        // Exponents equal. Check digit by digit.\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\n\n        for (a = b = 0; b < j; b++) {\n          if (xc[b] != yc[b]) {\n            xLTy = xc[b] < yc[b];\n            break;\n          }\n        }\n      } // x < y? Point xc to the array of the bigger number.\n\n\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\n      b = (j = yc.length) - (i = xc.length); // Append zeros to xc if shorter.\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\n\n      if (b > 0) for (; b--; xc[i++] = 0);\n      b = BASE - 1; // Subtract yc from xc.\n\n      for (; j > a;) {\n        if (xc[--j] < yc[j]) {\n          for (i = j; i && !xc[--i]; xc[i] = b);\n\n          --xc[i];\n          xc[j] += BASE;\n        }\n\n        xc[j] -= yc[j];\n      } // Remove leading zeros and adjust exponent accordingly.\n\n\n      for (; xc[0] == 0; xc.splice(0, 1), --ye); // Zero?\n\n\n      if (!xc[0]) {\n        // Following IEEE 754 (2008) 6.3,\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\n        y.c = [y.e = 0];\n        return y;\n      } // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\n      // for finite x and y.\n\n\n      return normalise(y, xc, ye);\n    };\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\n\n\n    P.modulo = P.mod = function (y, b) {\n      var q,\n          s,\n          x = this;\n      y = new BigNumber(y, b); // Return NaN if x is Infinity or NaN, or y is NaN or zero.\n\n      if (!x.c || !y.s || y.c && !y.c[0]) {\n        return new BigNumber(NaN); // Return x if y is Infinity or x is zero.\n      } else if (!y.c || x.c && !x.c[0]) {\n        return new BigNumber(x);\n      }\n\n      if (MODULO_MODE == 9) {\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\n        // r = x - qy    where  0 <= r < abs(y)\n        s = y.s;\n        y.s = 1;\n        q = div(x, y, 0, 3);\n        y.s = s;\n        q.s *= s;\n      } else {\n        q = div(x, y, 0, MODULO_MODE);\n      }\n\n      y = x.minus(q.times(y)); // To match JavaScript %, ensure sign of zero is sign of dividend.\n\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\n      return y;\n    };\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\n\n\n    P.multipliedBy = P.times = function (y, b) {\n      var c,\n          e,\n          i,\n          j,\n          k,\n          m,\n          xcL,\n          xlo,\n          xhi,\n          ycL,\n          ylo,\n          yhi,\n          zc,\n          base,\n          sqrtBase,\n          x = this,\n          xc = x.c,\n          yc = (y = new BigNumber(y, b)).c; // Either NaN, ±Infinity or ±0?\n\n      if (!xc || !yc || !xc[0] || !yc[0]) {\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\n          y.c = y.e = y.s = null;\n        } else {\n          y.s *= x.s; // Return ±Infinity if either is ±Infinity.\n\n          if (!xc || !yc) {\n            y.c = y.e = null; // Return ±0 if either is ±0.\n          } else {\n            y.c = [0];\n            y.e = 0;\n          }\n        }\n\n        return y;\n      }\n\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\n      y.s *= x.s;\n      xcL = xc.length;\n      ycL = yc.length; // Ensure xc points to longer array and xcL to its length.\n\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i; // Initialise the result array with zeros.\n\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\n\n      base = BASE;\n      sqrtBase = SQRT_BASE;\n\n      for (i = ycL; --i >= 0;) {\n        c = 0;\n        ylo = yc[i] % sqrtBase;\n        yhi = yc[i] / sqrtBase | 0;\n\n        for (k = xcL, j = i + k; j > i;) {\n          xlo = xc[--k] % sqrtBase;\n          xhi = xc[k] / sqrtBase | 0;\n          m = yhi * xlo + xhi * ylo;\n          xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\n          zc[j--] = xlo % base;\n        }\n\n        zc[j] = c;\n      }\n\n      if (c) {\n        ++e;\n      } else {\n        zc.splice(0, 1);\n      }\n\n      return normalise(y, zc, e);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\n\n\n    P.negated = function () {\n      var x = new BigNumber(this);\n      x.s = -x.s || null;\n      return x;\n    };\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\n\n\n    P.plus = function (y, b) {\n      var t,\n          x = this,\n          a = x.s;\n      y = new BigNumber(y, b);\n      b = y.s; // Either NaN?\n\n      if (!a || !b) return new BigNumber(NaN); // Signs differ?\n\n      if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n      }\n\n      var xe = x.e / LOG_BASE,\n          ye = y.e / LOG_BASE,\n          xc = x.c,\n          yc = y.c;\n\n      if (!xe || !ye) {\n        // Return ±Infinity if either ±Infinity.\n        if (!xc || !yc) return new BigNumber(a / 0); // Either zero?\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\n      }\n\n      xe = bitFloor(xe);\n      ye = bitFloor(ye);\n      xc = xc.slice(); // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\n\n      if (a = xe - ye) {\n        if (a > 0) {\n          ye = xe;\n          t = yc;\n        } else {\n          a = -a;\n          t = xc;\n        }\n\n        t.reverse();\n\n        for (; a--; t.push(0));\n\n        t.reverse();\n      }\n\n      a = xc.length;\n      b = yc.length; // Point xc to the longer array, and b to the shorter length.\n\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a; // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\n\n      for (a = 0; b;) {\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\n      }\n\n      if (a) {\n        xc = [a].concat(xc);\n        ++ye;\n      } // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n      // ye = MAX_EXP + 1 possible\n\n\n      return normalise(y, xc, ye);\n    };\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\n\n\n    P.precision = P.sd = function (sd, rm) {\n      var c,\n          n,\n          v,\n          x = this;\n\n      if (sd != null && sd !== !!sd) {\n        intCheck(sd, 1, MAX);\n        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n        return round(new BigNumber(x), sd, rm);\n      }\n\n      if (!(c = x.c)) return null;\n      v = c.length - 1;\n      n = v * LOG_BASE + 1;\n\n      if (v = c[v]) {\n        // Subtract the number of trailing zeros of the last element.\n        for (; v % 10 == 0; v /= 10, n--); // Add the number of digits of the first element.\n\n\n        for (v = c[0]; v >= 10; v /= 10, n++);\n      }\n\n      if (sd && x.e + 1 > n) n = x.e + 1;\n      return n;\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\n\n\n    P.shiftedBy = function (k) {\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n      return this.times('1e' + k);\n    };\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\n\n\n    P.squareRoot = P.sqrt = function () {\n      var m,\n          n,\n          r,\n          rep,\n          t,\n          x = this,\n          c = x.c,\n          s = x.s,\n          e = x.e,\n          dp = DECIMAL_PLACES + 4,\n          half = new BigNumber('0.5'); // Negative/NaN/Infinity/zero?\n\n      if (s !== 1 || !c || !c[0]) {\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\n      } // Initial estimate.\n\n\n      s = Math.sqrt(+valueOf(x)); // Math.sqrt underflow/overflow?\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n\n      if (s == 0 || s == 1 / 0) {\n        n = coeffToString(c);\n        if ((n.length + e) % 2 == 0) n += '0';\n        s = Math.sqrt(+n);\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\n\n        if (s == 1 / 0) {\n          n = '1e' + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf('e') + 1) + e;\n        }\n\n        r = new BigNumber(n);\n      } else {\n        r = new BigNumber(s + '');\n      } // Check for zero.\n      // r could be zero if MIN_EXP is changed after the this value was created.\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\n      // coeffToString to throw.\n\n\n      if (r.c[0]) {\n        e = r.e;\n        s = e + dp;\n        if (s < 3) s = 0; // Newton-Raphson iteration.\n\n        for (;;) {\n          t = r;\n          r = half.times(t.plus(div(x, t, dp, 1)));\n\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\n            // The exponent of r may here be one less than the final result exponent,\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\n            // are indexed correctly.\n            if (r.e < e) --s;\n            n = n.slice(s - 3, s + 1); // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\n            // iteration.\n\n            if (n == '9999' || !rep && n == '4999') {\n              // On the first iteration only, check to see if rounding up gives the\n              // exact result as the nines may infinitely repeat.\n              if (!rep) {\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\n\n                if (t.times(t).eq(x)) {\n                  r = t;\n                  break;\n                }\n              }\n\n              dp += 4;\n              s += 4;\n              rep = 1;\n            } else {\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\n              // result. If not, then there are further digits and m will be truthy.\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n                // Truncate to the first rounding digit.\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\n                m = !r.times(r).eq(x);\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.toExponential = function (dp, rm) {\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        dp++;\n      }\n\n      return format(this, dp, rm, 1);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.toFixed = function (dp, rm) {\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        dp = dp + this.e + 1;\n      }\n\n      return format(this, dp, rm);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\n\n\n    P.toFormat = function (dp, rm, format) {\n      var str,\n          x = this;\n\n      if (format == null) {\n        if (dp != null && rm && typeof rm == 'object') {\n          format = rm;\n          rm = null;\n        } else if (dp && typeof dp == 'object') {\n          format = dp;\n          dp = rm = null;\n        } else {\n          format = FORMAT;\n        }\n      } else if (typeof format != 'object') {\n        throw Error(bignumberError + 'Argument not an object: ' + format);\n      }\n\n      str = x.toFixed(dp, rm);\n\n      if (x.c) {\n        var i,\n            arr = str.split('.'),\n            g1 = +format.groupSize,\n            g2 = +format.secondaryGroupSize,\n            groupSeparator = format.groupSeparator || '',\n            intPart = arr[0],\n            fractionPart = arr[1],\n            isNeg = x.s < 0,\n            intDigits = isNeg ? intPart.slice(1) : intPart,\n            len = intDigits.length;\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\n\n        if (g1 > 0 && len > 0) {\n          i = len % g1 || g1;\n          intPart = intDigits.substr(0, i);\n\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\n\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\n          if (isNeg) intPart = '-' + intPart;\n        }\n\n        str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;\n      }\n\n      return (format.prefix || '') + str + (format.suffix || '');\n    };\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\n\n\n    P.toFraction = function (md) {\n      var d,\n          d0,\n          d1,\n          d2,\n          e,\n          exp,\n          n,\n          n0,\n          n1,\n          q,\n          r,\n          s,\n          x = this,\n          xc = x.c;\n\n      if (md != null) {\n        n = new BigNumber(md); // Throw if md is less than one or is not an integer, unless it is Infinity.\n\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\n          throw Error(bignumberError + 'Argument ' + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\n        }\n      }\n\n      if (!xc) return new BigNumber(x);\n      d = new BigNumber(ONE);\n      n1 = d0 = new BigNumber(ONE);\n      d1 = n0 = new BigNumber(ONE);\n      s = coeffToString(xc); // Determine initial denominator.\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\n\n      e = d.e = s.length - x.e - 1;\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\n      md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;\n      exp = MAX_EXP;\n      MAX_EXP = 1 / 0;\n      n = new BigNumber(s); // n0 = d1 = 0\n\n      n0.c[0] = 0;\n\n      for (;;) {\n        q = div(n, d, 0, 1);\n        d2 = d0.plus(q.times(d1));\n        if (d2.comparedTo(md) == 1) break;\n        d0 = d1;\n        d1 = d2;\n        n1 = n0.plus(q.times(d2 = n1));\n        n0 = d2;\n        d = n.minus(q.times(d2 = d));\n        n = d2;\n      }\n\n      d2 = div(md.minus(d0), d1, 0, 1);\n      n0 = n0.plus(d2.times(n1));\n      d0 = d0.plus(d2.times(d1));\n      n0.s = n1.s = x.s;\n      e = e * 2; // Determine which fraction is closer to x, n0/d0 or n1/d1\n\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n      MAX_EXP = exp;\n      return r;\n    };\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\n\n\n    P.toNumber = function () {\n      return +valueOf(this);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\n\n\n    P.toPrecision = function (sd, rm) {\n      if (sd != null) intCheck(sd, 1, MAX);\n      return format(this, sd, rm, 2);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\n\n\n    P.toString = function (b) {\n      var str,\n          n = this,\n          s = n.s,\n          e = n.e; // Infinity or NaN?\n\n      if (e === null) {\n        if (s) {\n          str = 'Infinity';\n          if (s < 0) str = '-' + str;\n        } else {\n          str = 'NaN';\n        }\n      } else {\n        if (b == null) {\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');\n        } else if (b === 10) {\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\n        } else {\n          intCheck(b, 2, ALPHABET.length, 'Base');\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\n        }\n\n        if (s < 0 && n.c[0]) str = '-' + str;\n      }\n\n      return str;\n    };\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\n\n\n    P.valueOf = P.toJSON = function () {\n      return valueOf(this);\n    };\n\n    P._isBigNumber = true;\n    if (configObject != null) BigNumber.set(configObject);\n    return BigNumber;\n  } // PRIVATE HELPER FUNCTIONS\n  // These functions don't need access to variables,\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\n\n\n  function bitFloor(n) {\n    var i = n | 0;\n    return n > 0 || n === i ? i : i - 1;\n  } // Return a coefficient array as a string of base 10 digits.\n\n\n  function coeffToString(a) {\n    var s,\n        z,\n        i = 1,\n        j = a.length,\n        r = a[0] + '';\n\n    for (; i < j;) {\n      s = a[i++] + '';\n      z = LOG_BASE - s.length;\n\n      for (; z--; s = '0' + s);\n\n      r += s;\n    } // Determine trailing zeros.\n\n\n    for (j = r.length; r.charCodeAt(--j) === 48;);\n\n    return r.slice(0, j + 1 || 1);\n  } // Compare the value of BigNumbers x and y.\n\n\n  function compare(x, y) {\n    var a,\n        b,\n        xc = x.c,\n        yc = y.c,\n        i = x.s,\n        j = y.s,\n        k = x.e,\n        l = y.e; // Either NaN?\n\n    if (!i || !j) return null;\n    a = xc && !xc[0];\n    b = yc && !yc[0]; // Either zero?\n\n    if (a || b) return a ? b ? 0 : -j : i; // Signs differ?\n\n    if (i != j) return i;\n    a = i < 0;\n    b = k == l; // Either Infinity?\n\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1; // Compare exponents.\n\n    if (!b) return k > l ^ a ? 1 : -1;\n    j = (k = xc.length) < (l = yc.length) ? k : l; // Compare digit by digit.\n\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1; // Compare lengths.\n\n\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\n  }\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\n\n\n  function intCheck(n, min, max, name) {\n    if (n < min || n > max || n !== mathfloor(n)) {\n      throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));\n    }\n  } // Assumes finite n.\n\n\n  function isOdd(n) {\n    var k = n.c.length - 1;\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\n  }\n\n  function toExponential(str, e) {\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;\n  }\n\n  function toFixedPoint(str, e, z) {\n    var len, zs; // Negative exponent?\n\n    if (e < 0) {\n      // Prepend zeros.\n      for (zs = z + '.'; ++e; zs += z);\n\n      str = zs + str; // Positive exponent\n    } else {\n      len = str.length; // Append zeros.\n\n      if (++e > len) {\n        for (zs = z, e -= len; --e; zs += z);\n\n        str += zs;\n      } else if (e < len) {\n        str = str.slice(0, e) + '.' + str.slice(e);\n      }\n    }\n\n    return str;\n  } // EXPORT\n\n\n  BigNumber = clone();\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber; // AMD.\n\n  if (typeof define == 'function' && define.amd) {\n    define(function () {\n      return BigNumber;\n    }); // Node.js and other environments that support module.exports.\n  } else if (typeof module != 'undefined' && module.exports) {\n    module.exports = BigNumber; // Browser.\n  } else {\n    if (!globalObject) {\n      globalObject = typeof self != 'undefined' && self ? self : window;\n    }\n\n    globalObject.BigNumber = BigNumber;\n  }\n})(void 0);","'use strict'\n\nconst Bignumber = require('bignumber.js').BigNumber\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n}\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36\n}\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n}\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n}\n\nexports.SYMS = {\n  NULL: Symbol('null'),\n  UNDEFINED: Symbol('undef'),\n  PARENT: Symbol('parent'),\n  BREAK: Symbol('break'),\n  STREAM: Symbol('stream')\n}\n\nexports.SHIFT32 = Math.pow(2, 32)\nexports.SHIFT16 = Math.pow(2, 16)\n\nexports.MAX_SAFE_HIGH = 0x1fffff\nexports.NEG_ONE = new Bignumber(-1)\nexports.TEN = new Bignumber(10)\nexports.TWO = new Bignumber(2)\n\nexports.PARENT = {\n  ARRAY: 0,\n  OBJECT: 1,\n  MAP: 2,\n  TAG: 3,\n  BYTE_STRING: 4,\n  UTF8_STRING: 5\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst constants = require('./constants')\nconst SHIFT32 = constants.SHIFT32\nconst SHIFT16 = constants.SHIFT16\nconst MAX_SAFE_HIGH = 0x1fffff\n\nexports.parseHalf = function parseHalf (buf) {\n  var exp, mant, sign\n  sign = buf[0] & 0x80 ? -1 : 1\n  exp = (buf[0] & 0x7C) >> 2\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\n  if (!exp) {\n    return sign * 5.9604644775390625e-8 * mant\n  } else if (exp === 0x1f) {\n    return sign * (mant ? 0 / 0 : 2e308)\n  } else {\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\n  }\n}\n\nfunction toHex (n) {\n  if (n < 16) {\n    return '0' + n.toString(16)\n  }\n\n  return n.toString(16)\n}\n\nexports.arrayBufferToBignumber = function (buf) {\n  const len = buf.byteLength\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += toHex(buf[i])\n  }\n\n  return new Bignumber(res, 16)\n}\n\n// convert an Object into a Map\nexports.buildMap = (obj) => {\n  const res = new Map()\n  const keys = Object.keys(obj)\n  const length = keys.length\n  for (let i = 0; i < length; i++) {\n    res.set(keys[i], obj[keys[i]])\n  }\n  return res\n}\n\nexports.buildInt32 = (f, g) => {\n  return f * SHIFT16 + g\n}\n\nexports.buildInt64 = (f1, f2, g1, g2) => {\n  const f = exports.buildInt32(f1, f2)\n  const g = exports.buildInt32(g1, g2)\n\n  if (f > MAX_SAFE_HIGH) {\n    return new Bignumber(f).times(SHIFT32).plus(g)\n  } else {\n    return (f * SHIFT32) + g\n  }\n}\n\nexports.writeHalf = function writeHalf (buf, half) {\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\n\n  // HACK: everyone settle in.  This isn't going to be pretty.\n  // Translate cn-cbor's C code (from Carsten Borman):\n\n  // uint32_t be32;\n  // uint16_t be16, u16;\n  // union {\n  //   float f;\n  //   uint32_t u;\n  // } u32;\n  // u32.f = float_val;\n\n  const u32 = Buffer.allocUnsafe(4)\n  u32.writeFloatBE(half, 0)\n  const u = u32.readUInt32BE(0)\n\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\n\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\n  if ((u & 0x1FFF) !== 0) {\n    return false\n  }\n\n  //   int s16 = (u32.u >> 16) & 0x8000;\n  //   int exp = (u32.u >> 23) & 0xff;\n  //   int mant = u32.u & 0x7fffff;\n\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\n  const mant = u & 0x7fffff\n\n  //   if (exp == 0 && mant == 0)\n  //     ;              /* 0.0, -0.0 */\n\n  // hildjj: zeros already handled.  Assert if you don't believe me.\n\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\n  if ((exp >= 113) && (exp <= 142)) {\n    s16 += ((exp - 112) << 10) + (mant >> 13)\n\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\n  //     if (mant & ((1 << (126 - exp)) - 1))\n  //       goto float32;         /* loss of precision */\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\n  } else if ((exp >= 103) && (exp < 113)) {\n    if (mant & ((1 << (126 - exp)) - 1)) {\n      return false\n    }\n    s16 += ((mant + 0x800000) >> (126 - exp))\n\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\n    //     s16 += 0x7c00;\n\n    // hildjj: Infinity already handled\n\n  //   } else\n  //     goto float32;           /* loss of range */\n  } else {\n    return false\n  }\n\n  //   ensure_writable(3);\n  //   u16 = s16;\n  //   be16 = hton16p((const uint8_t*)&u16);\n  buf.writeUInt16BE(s16, 0)\n  return true\n}\n\nexports.keySorter = function (a, b) {\n  var lenA = a[0].byteLength\n  var lenB = b[0].byteLength\n\n  if (lenA > lenB) {\n    return 1\n  }\n\n  if (lenB > lenA) {\n    return -1\n  }\n\n  return a[0].compare(b[0])\n}\n\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\nexports.isNegativeZero = (x) => {\n  return x === 0 && (1 / x < 0)\n}\n\nexports.nextPowerOf2 = (n) => {\n  let count = 0\n  // First n in the below condition is for\n  // the case where n is 0\n  if (n && !(n & (n - 1))) {\n    return n\n  }\n\n  while (n !== 0) {\n    n >>= 1\n    count += 1\n  }\n\n  return 1 << count\n}\n","\"use strict\";\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","\"use strict\";\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n","'use strict'\n\nconst constants = require('./constants')\nconst MT = constants.MT\nconst SIMPLE = constants.SIMPLE\nconst SYMS = constants.SYMS\n\n/**\n * A CBOR Simple Value that does not map onto a known constant.\n */\nclass Simple {\n  /**\n   * Creates an instance of Simple.\n   *\n   * @param {integer} value - the simple value's integer value\n   */\n  constructor (value) {\n    if (typeof value !== 'number') {\n      throw new Error('Invalid Simple type: ' + (typeof value))\n    }\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\n      throw new Error('value must be a small positive integer: ' + value)\n    }\n    this.value = value\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  toString () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  inspect () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\n  }\n\n  /**\n   * Is the given object a Simple?\n   *\n   * @param {any} obj - object to test\n   * @returns {bool} - is it Simple?\n   */\n  static isSimple (obj) {\n    return obj instanceof Simple\n  }\n\n  /**\n   * Decode from the CBOR additional information into a JavaScript value.\n   * If the CBOR item has no parent, return a \"safe\" symbol instead of\n   * `null` or `undefined`, so that the value can be passed through a\n   * stream in object mode.\n   *\n   * @param {Number} val - the CBOR additional info to convert\n   * @param {bool} hasParent - Does the CBOR item have a parent?\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\n   */\n  static decode (val, hasParent) {\n    if (hasParent == null) {\n      hasParent = true\n    }\n    switch (val) {\n      case SIMPLE.FALSE:\n        return false\n      case SIMPLE.TRUE:\n        return true\n      case SIMPLE.NULL:\n        if (hasParent) {\n          return null\n        } else {\n          return SYMS.NULL\n        }\n      case SIMPLE.UNDEFINED:\n        if (hasParent) {\n          return undefined\n        } else {\n          return SYMS.UNDEFINED\n        }\n      case -1:\n        if (!hasParent) {\n          throw new Error('Invalid BREAK')\n        }\n        return SYMS.BREAK\n      default:\n        return new Simple(val)\n    }\n  }\n}\n\nmodule.exports = Simple\n","'use strict'\n\n/**\n * A CBOR tagged item, where the tag does not have semantics specified at the\n * moment, or those semantics threw an error during parsing. Typically this will\n * be an extension point you're not yet expecting.\n */\nclass Tagged {\n  /**\n   * Creates an instance of Tagged.\n   *\n   * @param {Number} tag - the number of the tag\n   * @param {any} value - the value inside the tag\n   * @param {Error} err - the error that was thrown parsing the tag, or null\n   */\n  constructor (tag, value, err) {\n    this.tag = tag\n    this.value = value\n    this.err = err\n    if (typeof this.tag !== 'number') {\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\n    }\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\n      throw new Error('Tag must be a positive integer: ' + this.tag)\n    }\n  }\n\n  /**\n   * Convert to a String\n   *\n   * @returns {String} string of the form '1(2)'\n   */\n  toString () {\n    return `${this.tag}(${JSON.stringify(this.value)})`\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    gen._pushTag(this.tag)\n    return gen.pushAny(this.value)\n  }\n\n  /**\n   * If we have a converter for this type, do the conversion.  Some converters\n   * are built-in.  Additional ones can be passed in.  If you want to remove\n   * a built-in converter, pass a converter in whose value is 'null' instead\n   * of a function.\n   *\n   * @param {Object} converters - keys in the object are a tag number, the value\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\n   *   of the appropriate type.  Throw an exception in the function on errors.\n   * @returns {any} - the converted item\n   */\n  convert (converters) {\n    var er, f\n    f = converters != null ? converters[this.tag] : undefined\n    if (typeof f !== 'function') {\n      f = Tagged['_tag' + this.tag]\n      if (typeof f !== 'function') {\n        return this\n      }\n    }\n    try {\n      return f.call(Tagged, this.value)\n    } catch (error) {\n      er = error\n      this.err = er\n      return this\n    }\n  }\n}\n\nmodule.exports = Tagged\n","'use strict';\n\nconst {\n  URLWithLegacySupport,\n  format,\n  URLSearchParams,\n  defaultBase\n} = require('./src/url');\n\nconst relative = require('./src/relative');\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams,\n  format,\n  relative,\n  defaultBase\n};","'use strict';\n\nconst defaultBase = self.location ? self.location.protocol + '//' + self.location.host : '';\nconst URL = self.URL;\n\nclass URLWithLegacySupport {\n  constructor(url = '', base = defaultBase) {\n    this.super = new URL(url, base);\n    this.path = this.pathname + this.search;\n    this.auth = this.username && this.password ? this.username + ':' + this.password : null;\n    this.query = this.search && this.search.startsWith('?') ? this.search.slice(1) : null;\n  }\n\n  get hash() {\n    return this.super.hash;\n  }\n\n  get host() {\n    return this.super.host;\n  }\n\n  get hostname() {\n    return this.super.hostname;\n  }\n\n  get href() {\n    return this.super.href;\n  }\n\n  get origin() {\n    return this.super.origin;\n  }\n\n  get password() {\n    return this.super.password;\n  }\n\n  get pathname() {\n    return this.super.pathname;\n  }\n\n  get port() {\n    return this.super.port;\n  }\n\n  get protocol() {\n    return this.super.protocol;\n  }\n\n  get search() {\n    return this.super.search;\n  }\n\n  get searchParams() {\n    return this.super.searchParams;\n  }\n\n  get username() {\n    return this.super.username;\n  }\n\n  set hash(hash) {\n    this.super.hash = hash;\n  }\n\n  set host(host) {\n    this.super.host = host;\n  }\n\n  set hostname(hostname) {\n    this.super.hostname = hostname;\n  }\n\n  set href(href) {\n    this.super.href = href;\n  }\n\n  set origin(origin) {\n    this.super.origin = origin;\n  }\n\n  set password(password) {\n    this.super.password = password;\n  }\n\n  set pathname(pathname) {\n    this.super.pathname = pathname;\n  }\n\n  set port(port) {\n    this.super.port = port;\n  }\n\n  set protocol(protocol) {\n    this.super.protocol = protocol;\n  }\n\n  set search(search) {\n    this.super.search = search;\n  }\n\n  set searchParams(searchParams) {\n    this.super.searchParams = searchParams;\n  }\n\n  set username(username) {\n    this.super.username = username;\n  }\n\n  createObjectURL(o) {\n    return this.super.createObjectURL(o);\n  }\n\n  revokeObjectURL(o) {\n    this.super.revokeObjectURL(o);\n  }\n\n  toJSON() {\n    return this.super.toJSON();\n  }\n\n  toString() {\n    return this.super.toString();\n  }\n\n  format() {\n    return this.toString();\n  }\n\n}\n\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj);\n    return url.toString();\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass = obj.username && obj.password ? \"\".concat(obj.username, \":\").concat(obj.password, \"@\") : '';\n    const auth = obj.auth ? obj.auth + '@' : '';\n    const port = obj.port ? ':' + obj.port : '';\n    const protocol = obj.protocol ? obj.protocol + '//' : '';\n    const host = obj.host || '';\n    const hostname = obj.hostname || '';\n    const search = obj.search || (obj.query ? '?' + obj.query : '');\n    const hash = obj.hash || '';\n    const pathname = obj.pathname || '';\n    const path = obj.path || pathname + search;\n    return \"\".concat(protocol).concat(userPass || auth).concat(host || hostname + port).concat(path).concat(hash);\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n};","'use strict'\n\n// exports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\n\n// exports.comment = exports.Commented.comment\nexports.decodeAll = exports.Decoder.decodeAll\nexports.decodeFirst = exports.Decoder.decodeFirst\nexports.diagnose = exports.Diagnose.diagnose\nexports.encode = exports.Encoder.encode\nexports.decode = exports.Decoder.decode\n\nexports.leveldb = {\n  decode: exports.Decoder.decodeAll,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Decoder = require('./decoder')\nconst utils = require('./utils')\n\n/**\n * Output the diagnostic format from a stream of CBOR bytes.\n *\n */\nclass Diagnose extends Decoder {\n  createTag (tagNumber, value) {\n    return `${tagNumber}(${value})`\n  }\n\n  createInt (val) {\n    return super.createInt(val).toString()\n  }\n\n  createInt32 (f, g) {\n    return super.createInt32(f, g).toString()\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return super.createInt64(f1, f2, g1, g2).toString()\n  }\n\n  createInt32Neg (f, g) {\n    return super.createInt32Neg(f, g).toString()\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\n  }\n\n  createTrue () {\n    return 'true'\n  }\n\n  createFalse () {\n    return 'false'\n  }\n\n  createFloat (val) {\n    const fl = super.createFloat(val)\n    if (utils.isNegativeZero(val)) {\n      return '-0_1'\n    }\n\n    return `${fl}_1`\n  }\n\n  createFloatSingle (a, b, c, d) {\n    const fl = super.createFloatSingle(a, b, c, d)\n    return `${fl}_2`\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\n    return `${fl}_3`\n  }\n\n  createByteString (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n    return `h'${val}`\n  }\n\n  createByteStringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createByteStringFromHeap(start, end)\n    )).toString('hex')\n\n    return `h'${val}'`\n  }\n\n  createInfinity () {\n    return 'Infinity_1'\n  }\n\n  createInfinityNeg () {\n    return '-Infinity_1'\n  }\n\n  createNaN () {\n    return 'NaN_1'\n  }\n\n  createNaNNeg () {\n    return '-NaN_1'\n  }\n\n  createNull () {\n    return 'null'\n  }\n\n  createUndefined () {\n    return 'undefined'\n  }\n\n  createSimpleUnassigned (val) {\n    return `simple(${val})`\n  }\n\n  createArray (arr, len) {\n    const val = super.createArray(arr, len)\n\n    if (len === -1) {\n      // indefinite\n      return `[_ ${val.join(', ')}]`\n    }\n\n    return `[${val.join(', ')}]`\n  }\n\n  createMap (map, len) {\n    const val = super.createMap(map)\n    const list = Array.from(val.keys())\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${list}}`\n    }\n\n    return `{${list}}`\n  }\n\n  createObject (obj, len) {\n    const val = super.createObject(obj)\n    const map = Object.keys(val)\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${map}}`\n    }\n\n    return `{${map}}`\n  }\n\n  createUtf8String (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n\n    return `\"${val}\"`\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createUtf8StringFromHeap(start, end)\n    )).toString('utf8')\n\n    return `\"${val}\"`\n  }\n\n  static diagnose (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Diagnose()\n    return dec.decodeFirst(input)\n  }\n}\n\nmodule.exports = Diagnose\n\nfunction collectObject (val) {\n  return (acc, key) => {\n    if (acc) {\n      return `${acc}, ${key}: ${val[key]}`\n    }\n    return `${key}: ${val[key]}`\n  }\n}\n","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","\"use strict\";\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/* eslint-disable */\n\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\n  'use asm'\n\n  // -- Imports\n\n  var heap = new stdlib.Uint8Array(buffer)\n  // var log = foreign.log\n  var pushInt = foreign.pushInt\n  var pushInt32 = foreign.pushInt32\n  var pushInt32Neg = foreign.pushInt32Neg\n  var pushInt64 = foreign.pushInt64\n  var pushInt64Neg = foreign.pushInt64Neg\n  var pushFloat = foreign.pushFloat\n  var pushFloatSingle = foreign.pushFloatSingle\n  var pushFloatDouble = foreign.pushFloatDouble\n  var pushTrue = foreign.pushTrue\n  var pushFalse = foreign.pushFalse\n  var pushUndefined = foreign.pushUndefined\n  var pushNull = foreign.pushNull\n  var pushInfinity = foreign.pushInfinity\n  var pushInfinityNeg = foreign.pushInfinityNeg\n  var pushNaN = foreign.pushNaN\n  var pushNaNNeg = foreign.pushNaNNeg\n\n  var pushArrayStart = foreign.pushArrayStart\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\n  var pushObjectStart = foreign.pushObjectStart\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\n\n  var pushByteString = foreign.pushByteString\n  var pushByteStringStart = foreign.pushByteStringStart\n  var pushUtf8String = foreign.pushUtf8String\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\n\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\n\n  var pushTagStart = foreign.pushTagStart\n  var pushTagStart4 = foreign.pushTagStart4\n  var pushTagStart8 = foreign.pushTagStart8\n  var pushTagUnassigned = foreign.pushTagUnassigned\n\n  var pushBreak = foreign.pushBreak\n\n  var pow = stdlib.Math.pow\n\n  // -- Constants\n\n\n  // -- Mutable Variables\n\n  var offset = 0\n  var inputLength = 0\n  var code = 0\n\n  // Decode a cbor string represented as Uint8Array\n  // which is allocated on the heap from 0 to inputLength\n  //\n  // input - Int\n  //\n  // Returns Code - Int,\n  // Success = 0\n  // Error > 0\n  function parse (input) {\n    input = input | 0\n\n    offset = 0\n    inputLength = input\n\n    while ((offset | 0) < (inputLength | 0)) {\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\n\n      if ((code | 0) > 0) {\n        break\n      }\n    }\n\n    return code | 0\n  }\n\n  // -- Helper Function\n\n  function checkOffset (n) {\n    n = n | 0\n\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\n      return 0\n    }\n\n    return 1\n  }\n\n  function readUInt16 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\n    ) | 0\n  }\n\n  function readUInt32 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\n    ) | 0\n  }\n\n  // -- Initial Byte Handlers\n\n  function INT_P (octet) {\n    octet = octet | 0\n\n    pushInt(octet | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_P_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_P_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushInt(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_P_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_P_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function INT_N (octet) {\n    octet = octet | 0\n\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_N_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\n    )\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_N_16 (octet) {\n    octet = octet | 0\n\n    var val = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    val = readUInt16((offset + 1) | 0) | 0\n    pushInt((-1 - (val | 0)) | 0)\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_N_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_N_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function BYTE_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 64) | 0\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BYTE_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushByteStringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UTF8_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 96) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function UTF8_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushUtf8StringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY (octet) {\n    octet = octet | 0\n\n    pushArrayStartFixed((octet - 128) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function ARRAY_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function ARRAY_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function ARRAY_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ARRAY_BREAK (octet) {\n    octet = octet | 0\n\n    pushArrayStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP (octet) {\n    octet = octet | 0\n\n    var step = 0\n\n    step = (octet - 160) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(step | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function MAP_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function MAP_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function MAP_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function MAP_BREAK (octet) {\n    octet = octet | 0\n\n    pushObjectStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function TAG_KNOWN (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_POS (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_NEG (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_FRAC (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_FLOAT (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64_URL (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE16 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_1 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushTagStart(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_2 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushTagStart(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_4 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushTagStart4(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushTagStart8(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9 | 0)\n\n    return 0\n  }\n\n  function SIMPLE_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FALSE (octet) {\n    octet = octet | 0\n\n    pushFalse()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_TRUE (octet) {\n    octet = octet | 0\n\n    pushTrue()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_NULL (octet) {\n    octet = octet | 0\n\n    pushNull()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_UNDEFINED (octet) {\n    octet = octet | 0\n\n    pushUndefined()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_BYTE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2)  | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_HALF (octet) {\n    octet = octet | 0\n\n    var f = 0\n    var g = 0\n    var sign = 1.0\n    var exp = 0.0\n    var mant = 0.0\n    var r = 0.0\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    f = heap[(offset + 1) | 0] | 0\n    g = heap[(offset + 2) | 0] | 0\n\n    if ((f | 0) & 0x80) {\n      sign = -1.0\n    }\n\n    exp = +(((f | 0) & 0x7C) >> 2)\n    mant = +((((f | 0) & 0x03) << 8) | g)\n\n    if (+exp == 0.0) {\n      pushFloat(+(\n        (+sign) * +5.9604644775390625e-8 * (+mant)\n      ))\n    } else if (+exp == 31.0) {\n      if (+sign == 1.0) {\n        if (+mant > 0.0) {\n          pushNaN()\n        } else {\n          pushInfinity()\n        }\n      } else {\n        if (+mant > 0.0) {\n          pushNaNNeg()\n        } else {\n          pushInfinityNeg()\n        }\n      }\n    } else {\n      pushFloat(+(\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\n      ))\n    }\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_SINGLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushFloatSingle(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_DOUBLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushFloatDouble(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0,\n      heap[(offset + 5) | 0] | 0,\n      heap[(offset + 6) | 0] | 0,\n      heap[(offset + 7) | 0] | 0,\n      heap[(offset + 8) | 0] | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ERROR (octet) {\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BREAK (octet) {\n    octet = octet | 0\n\n    pushBreak()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  // -- Jump Table\n\n  var jumpTable = [\n    // Integer 0x00..0x17 (0..23)\n    INT_P, // 0x00\n    INT_P, // 0x01\n    INT_P, // 0x02\n    INT_P, // 0x03\n    INT_P, // 0x04\n    INT_P, // 0x05\n    INT_P, // 0x06\n    INT_P, // 0x07\n    INT_P, // 0x08\n    INT_P, // 0x09\n    INT_P, // 0x0A\n    INT_P, // 0x0B\n    INT_P, // 0x0C\n    INT_P, // 0x0D\n    INT_P, // 0x0E\n    INT_P, // 0x0F\n    INT_P, // 0x10\n    INT_P, // 0x11\n    INT_P, // 0x12\n    INT_P, // 0x13\n    INT_P, // 0x14\n    INT_P, // 0x15\n    INT_P, // 0x16\n    INT_P, // 0x17\n    // Unsigned integer (one-byte uint8_t follows)\n    UINT_P_8, // 0x18\n    // Unsigned integer (two-byte uint16_t follows)\n    UINT_P_16, // 0x19\n    // Unsigned integer (four-byte uint32_t follows)\n    UINT_P_32, // 0x1a\n    // Unsigned integer (eight-byte uint64_t follows)\n    UINT_P_64, // 0x1b\n    ERROR, // 0x1c\n    ERROR, // 0x1d\n    ERROR, // 0x1e\n    ERROR, // 0x1f\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\n    INT_N, // 0x20\n    INT_N, // 0x21\n    INT_N, // 0x22\n    INT_N, // 0x23\n    INT_N, // 0x24\n    INT_N, // 0x25\n    INT_N, // 0x26\n    INT_N, // 0x27\n    INT_N, // 0x28\n    INT_N, // 0x29\n    INT_N, // 0x2A\n    INT_N, // 0x2B\n    INT_N, // 0x2C\n    INT_N, // 0x2D\n    INT_N, // 0x2E\n    INT_N, // 0x2F\n    INT_N, // 0x30\n    INT_N, // 0x31\n    INT_N, // 0x32\n    INT_N, // 0x33\n    INT_N, // 0x34\n    INT_N, // 0x35\n    INT_N, // 0x36\n    INT_N, // 0x37\n    // Negative integer -1-n (one-byte uint8_t for n follows)\n    UINT_N_8, // 0x38\n    // Negative integer -1-n (two-byte uint16_t for n follows)\n    UINT_N_16, // 0x39\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\n    UINT_N_32, // 0x3a\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\n    UINT_N_64, // 0x3b\n    ERROR, // 0x3c\n    ERROR, // 0x3d\n    ERROR, // 0x3e\n    ERROR, // 0x3f\n    // byte string (0x00..0x17 bytes follow)\n    BYTE_STRING, // 0x40\n    BYTE_STRING, // 0x41\n    BYTE_STRING, // 0x42\n    BYTE_STRING, // 0x43\n    BYTE_STRING, // 0x44\n    BYTE_STRING, // 0x45\n    BYTE_STRING, // 0x46\n    BYTE_STRING, // 0x47\n    BYTE_STRING, // 0x48\n    BYTE_STRING, // 0x49\n    BYTE_STRING, // 0x4A\n    BYTE_STRING, // 0x4B\n    BYTE_STRING, // 0x4C\n    BYTE_STRING, // 0x4D\n    BYTE_STRING, // 0x4E\n    BYTE_STRING, // 0x4F\n    BYTE_STRING, // 0x50\n    BYTE_STRING, // 0x51\n    BYTE_STRING, // 0x52\n    BYTE_STRING, // 0x53\n    BYTE_STRING, // 0x54\n    BYTE_STRING, // 0x55\n    BYTE_STRING, // 0x56\n    BYTE_STRING, // 0x57\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\n    BYTE_STRING_8, // 0x58\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\n    BYTE_STRING_16, // 0x59\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\n    BYTE_STRING_32, // 0x5a\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\n    BYTE_STRING_64, // 0x5b\n    ERROR, // 0x5c\n    ERROR, // 0x5d\n    ERROR, // 0x5e\n    // byte string, byte strings follow, terminated by \"break\"\n    BYTE_STRING_BREAK, // 0x5f\n    // UTF-8 string (0x00..0x17 bytes follow)\n    UTF8_STRING, // 0x60\n    UTF8_STRING, // 0x61\n    UTF8_STRING, // 0x62\n    UTF8_STRING, // 0x63\n    UTF8_STRING, // 0x64\n    UTF8_STRING, // 0x65\n    UTF8_STRING, // 0x66\n    UTF8_STRING, // 0x67\n    UTF8_STRING, // 0x68\n    UTF8_STRING, // 0x69\n    UTF8_STRING, // 0x6A\n    UTF8_STRING, // 0x6B\n    UTF8_STRING, // 0x6C\n    UTF8_STRING, // 0x6D\n    UTF8_STRING, // 0x6E\n    UTF8_STRING, // 0x6F\n    UTF8_STRING, // 0x70\n    UTF8_STRING, // 0x71\n    UTF8_STRING, // 0x72\n    UTF8_STRING, // 0x73\n    UTF8_STRING, // 0x74\n    UTF8_STRING, // 0x75\n    UTF8_STRING, // 0x76\n    UTF8_STRING, // 0x77\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\n    UTF8_STRING_8, // 0x78\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\n    UTF8_STRING_16, // 0x79\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\n    UTF8_STRING_32, // 0x7a\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\n    UTF8_STRING_64, // 0x7b\n    // UTF-8 string, UTF-8 strings follow, terminated by \"break\"\n    ERROR, // 0x7c\n    ERROR, // 0x7d\n    ERROR, // 0x7e\n    UTF8_STRING_BREAK, // 0x7f\n    // array (0x00..0x17 data items follow)\n    ARRAY, // 0x80\n    ARRAY, // 0x81\n    ARRAY, // 0x82\n    ARRAY, // 0x83\n    ARRAY, // 0x84\n    ARRAY, // 0x85\n    ARRAY, // 0x86\n    ARRAY, // 0x87\n    ARRAY, // 0x88\n    ARRAY, // 0x89\n    ARRAY, // 0x8A\n    ARRAY, // 0x8B\n    ARRAY, // 0x8C\n    ARRAY, // 0x8D\n    ARRAY, // 0x8E\n    ARRAY, // 0x8F\n    ARRAY, // 0x90\n    ARRAY, // 0x91\n    ARRAY, // 0x92\n    ARRAY, // 0x93\n    ARRAY, // 0x94\n    ARRAY, // 0x95\n    ARRAY, // 0x96\n    ARRAY, // 0x97\n    // array (one-byte uint8_t fo, and then n data items follow)\n    ARRAY_8, // 0x98\n    // array (two-byte uint16_t for n, and then n data items follow)\n    ARRAY_16, // 0x99\n    // array (four-byte uint32_t for n, and then n data items follow)\n    ARRAY_32, // 0x9a\n    // array (eight-byte uint64_t for n, and then n data items follow)\n    ARRAY_64, // 0x9b\n    // array, data items follow, terminated by \"break\"\n    ERROR, // 0x9c\n    ERROR, // 0x9d\n    ERROR, // 0x9e\n    ARRAY_BREAK, // 0x9f\n    // map (0x00..0x17 pairs of data items follow)\n    MAP, // 0xa0\n    MAP, // 0xa1\n    MAP, // 0xa2\n    MAP, // 0xa3\n    MAP, // 0xa4\n    MAP, // 0xa5\n    MAP, // 0xa6\n    MAP, // 0xa7\n    MAP, // 0xa8\n    MAP, // 0xa9\n    MAP, // 0xaA\n    MAP, // 0xaB\n    MAP, // 0xaC\n    MAP, // 0xaD\n    MAP, // 0xaE\n    MAP, // 0xaF\n    MAP, // 0xb0\n    MAP, // 0xb1\n    MAP, // 0xb2\n    MAP, // 0xb3\n    MAP, // 0xb4\n    MAP, // 0xb5\n    MAP, // 0xb6\n    MAP, // 0xb7\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\n    MAP_8, // 0xb8\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\n    MAP_16, // 0xb9\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\n    MAP_32, // 0xba\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\n    MAP_64, // 0xbb\n    ERROR, // 0xbc\n    ERROR, // 0xbd\n    ERROR, // 0xbe\n    // map, pairs of data items follow, terminated by \"break\"\n    MAP_BREAK, // 0xbf\n    // Text-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc0\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc1\n    // Positive bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc2\n    // Negative bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc3\n    // Decimal Fraction (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc4\n    // Bigfloat (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc5\n    // (tagged item)\n    TAG_UNASSIGNED, // 0xc6\n    TAG_UNASSIGNED, // 0xc7\n    TAG_UNASSIGNED, // 0xc8\n    TAG_UNASSIGNED, // 0xc9\n    TAG_UNASSIGNED, // 0xca\n    TAG_UNASSIGNED, // 0xcb\n    TAG_UNASSIGNED, // 0xcc\n    TAG_UNASSIGNED, // 0xcd\n    TAG_UNASSIGNED, // 0xce\n    TAG_UNASSIGNED, // 0xcf\n    TAG_UNASSIGNED, // 0xd0\n    TAG_UNASSIGNED, // 0xd1\n    TAG_UNASSIGNED, // 0xd2\n    TAG_UNASSIGNED, // 0xd3\n    TAG_UNASSIGNED, // 0xd4\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\n    TAG_UNASSIGNED, // 0xd5\n    TAG_UNASSIGNED, // 0xd6\n    TAG_UNASSIGNED, // 0xd7\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\n    TAG_MORE_1, // 0xd8\n    TAG_MORE_2, // 0xd9\n    TAG_MORE_4, // 0xda\n    TAG_MORE_8, // 0xdb\n    ERROR, // 0xdc\n    ERROR, // 0xdd\n    ERROR, // 0xde\n    ERROR, // 0xdf\n    // (simple value)\n    SIMPLE_UNASSIGNED, // 0xe0\n    SIMPLE_UNASSIGNED, // 0xe1\n    SIMPLE_UNASSIGNED, // 0xe2\n    SIMPLE_UNASSIGNED, // 0xe3\n    SIMPLE_UNASSIGNED, // 0xe4\n    SIMPLE_UNASSIGNED, // 0xe5\n    SIMPLE_UNASSIGNED, // 0xe6\n    SIMPLE_UNASSIGNED, // 0xe7\n    SIMPLE_UNASSIGNED, // 0xe8\n    SIMPLE_UNASSIGNED, // 0xe9\n    SIMPLE_UNASSIGNED, // 0xea\n    SIMPLE_UNASSIGNED, // 0xeb\n    SIMPLE_UNASSIGNED, // 0xec\n    SIMPLE_UNASSIGNED, // 0xed\n    SIMPLE_UNASSIGNED, // 0xee\n    SIMPLE_UNASSIGNED, // 0xef\n    SIMPLE_UNASSIGNED, // 0xf0\n    SIMPLE_UNASSIGNED, // 0xf1\n    SIMPLE_UNASSIGNED, // 0xf2\n    SIMPLE_UNASSIGNED, // 0xf3\n    // False\n    SIMPLE_FALSE, // 0xf4\n    // True\n    SIMPLE_TRUE, // 0xf5\n    // Null\n    SIMPLE_NULL, // 0xf6\n    // Undefined\n    SIMPLE_UNDEFINED, // 0xf7\n    // (simple value, one byte follows)\n    SIMPLE_BYTE, // 0xf8\n    // Half-Precision Float (two-byte IEEE 754)\n    SIMPLE_FLOAT_HALF, // 0xf9\n    // Single-Precision Float (four-byte IEEE 754)\n    SIMPLE_FLOAT_SINGLE, // 0xfa\n    // Double-Precision Float (eight-byte IEEE 754)\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\n    ERROR, // 0xfc\n    ERROR, // 0xfd\n    ERROR, // 0xfe\n    // \"break\" stop code\n    BREAK // 0xff\n  ]\n\n  // --\n\n  return {\n    parse: parse\n  }\n}\n","'use strict';\n\nconst {\n  URLWithLegacySupport,\n  format\n} = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n  let protocol = location.protocol ? location.protocol.replace(':', '') : 'http'; // Check protocol map\n\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n  let urlParsed;\n\n  try {\n    urlParsed = new URLWithLegacySupport(url);\n  } catch (err) {\n    urlParsed = {};\n  }\n\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  });\n  return new URLWithLegacySupport(url, format(base)).toString();\n};","'use strict'\n\nconst { Buffer } = require('buffer')\nconst { URL } = require('iso-url')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst utils = require('./utils')\nconst constants = require('./constants')\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SHIFT32 = constants.SHIFT32\nconst SYMS = constants.SYMS\nconst TAG = constants.TAG\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\n\nconst MAXINT_BN = new Bignumber('0x20000000000000')\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\n\nfunction toType (obj) {\n  // [object Type]\n  // --------8---1\n  return ({}).toString.call(obj).slice(8, -1)\n}\n\n/**\n * Transform JavaScript values into CBOR bytes\n *\n */\nclass Encoder {\n  /**\n   * @param {Object} [options={}]\n   * @param {function(Buffer)} options.stream\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.streaming = typeof options.stream === 'function'\n    this.onData = options.stream\n\n    this.semanticTypes = [\n      [URL, this._pushUrl],\n      [Bignumber, this._pushBigNumber]\n    ]\n\n    const addTypes = options.genTypes || []\n    const len = addTypes.length\n    for (let i = 0; i < len; i++) {\n      this.addSemanticType(\n        addTypes[i][0],\n        addTypes[i][1]\n      )\n    }\n\n    this._reset()\n  }\n\n  addSemanticType (type, fun) {\n    const len = this.semanticTypes.length\n    for (let i = 0; i < len; i++) {\n      const typ = this.semanticTypes[i][0]\n      if (typ === type) {\n        const old = this.semanticTypes[i][1]\n        this.semanticTypes[i][1] = fun\n        return old\n      }\n    }\n    this.semanticTypes.push([type, fun])\n    return null\n  }\n\n  push (val) {\n    if (!val) {\n      return true\n    }\n\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = 0\n    this.resultLength[this.offset] = val.length\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  pushWrite (val, method, len) {\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = method\n    this.resultLength[this.offset] = len\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  _pushUInt8 (val) {\n    return this.pushWrite(val, 1, 1)\n  }\n\n  _pushUInt16BE (val) {\n    return this.pushWrite(val, 2, 2)\n  }\n\n  _pushUInt32BE (val) {\n    return this.pushWrite(val, 3, 4)\n  }\n\n  _pushDoubleBE (val) {\n    return this.pushWrite(val, 4, 8)\n  }\n\n  _pushNaN () {\n    return this.push(BUF_NAN)\n  }\n\n  _pushInfinity (obj) {\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\n    return this.push(half)\n  }\n\n  _pushFloat (obj) {\n    const b2 = Buffer.allocUnsafe(2)\n\n    if (utils.writeHalf(b2, obj)) {\n      if (utils.parseHalf(b2) === obj) {\n        return this._pushUInt8(HALF) && this.push(b2)\n      }\n    }\n\n    const b4 = Buffer.allocUnsafe(4)\n    b4.writeFloatBE(obj, 0)\n    if (b4.readFloatBE(0) === obj) {\n      return this._pushUInt8(FLOAT) && this.push(b4)\n    }\n\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\n  }\n\n  _pushInt (obj, mt, orig) {\n    const m = mt << 5\n    if (obj < 24) {\n      return this._pushUInt8(m | obj)\n    }\n\n    if (obj <= 0xff) {\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\n    }\n\n    if (obj <= 0xffff) {\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\n    }\n\n    if (obj <= 0xffffffff) {\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\n    }\n\n    if (obj <= Number.MAX_SAFE_INTEGER) {\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\n        this._pushUInt32BE(obj % SHIFT32)\n    }\n\n    if (mt === MT.NEG_INT) {\n      return this._pushFloat(orig)\n    }\n\n    return this._pushFloat(obj)\n  }\n\n  _pushIntNum (obj) {\n    if (obj < 0) {\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\n    } else {\n      return this._pushInt(obj, MT.POS_INT)\n    }\n  }\n\n  _pushNumber (obj) {\n    switch (false) {\n      case (obj === obj): // eslint-disable-line\n        return this._pushNaN(obj)\n      case isFinite(obj):\n        return this._pushInfinity(obj)\n      case ((obj % 1) !== 0):\n        return this._pushIntNum(obj)\n      default:\n        return this._pushFloat(obj)\n    }\n  }\n\n  _pushString (obj) {\n    const len = Buffer.byteLength(obj, 'utf8')\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\n  }\n\n  _pushBoolean (obj) {\n    return this._pushUInt8(obj ? TRUE : FALSE)\n  }\n\n  _pushUndefined (obj) {\n    return this._pushUInt8(UNDEFINED)\n  }\n\n  _pushArray (gen, obj) {\n    const len = obj.length\n    if (!gen._pushInt(len, MT.ARRAY)) {\n      return false\n    }\n    for (let j = 0; j < len; j++) {\n      if (!gen.pushAny(obj[j])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushTag (tag) {\n    return this._pushInt(tag, MT.TAG)\n  }\n\n  _pushDate (gen, obj) {\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\n    // still allowed to encode fractions of seconds which can be achieved by\n    // changing overwriting the encode function for Date objects.\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\n  }\n\n  _pushBuffer (gen, obj) {\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\n  }\n\n  _pushNoFilter (gen, obj) {\n    return gen._pushBuffer(gen, obj.slice())\n  }\n\n  _pushRegexp (gen, obj) {\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\n  }\n\n  _pushSet (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\n      return false\n    }\n    for (const x of obj) {\n      if (!gen.pushAny(x)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushUrl (gen, obj) {\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\n  }\n\n  _pushBigint (obj) {\n    let tag = TAG.POS_BIGINT\n    if (obj.isNegative()) {\n      obj = obj.negated().minus(1)\n      tag = TAG.NEG_BIGINT\n    }\n    let str = obj.toString(16)\n    if (str.length % 2) {\n      str = '0' + str\n    }\n    const buf = Buffer.from(str, 'hex')\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\n  }\n\n  _pushBigNumber (gen, obj) {\n    if (obj.isNaN()) {\n      return gen._pushNaN()\n    }\n    if (!obj.isFinite()) {\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\n    }\n    if (obj.isInteger()) {\n      return gen._pushBigint(obj)\n    }\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\n      gen._pushInt(2, MT.ARRAY))) {\n      return false\n    }\n\n    const dec = obj.decimalPlaces()\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\n    if (!gen._pushIntNum(-dec)) {\n      return false\n    }\n    if (slide.abs().isLessThan(MAXINT_BN)) {\n      return gen._pushIntNum(slide.toNumber())\n    } else {\n      return gen._pushBigint(slide)\n    }\n  }\n\n  _pushMap (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      obj.size,\n      Array.from(obj)\n    )\n  }\n\n  _pushObject (obj) {\n    if (!obj) {\n      return this._pushUInt8(NULL)\n    }\n\n    var len = this.semanticTypes.length\n    for (var i = 0; i < len; i++) {\n      if (obj instanceof this.semanticTypes[i][0]) {\n        return this.semanticTypes[i][1].call(obj, this, obj)\n      }\n    }\n\n    var f = obj.encodeCBOR\n    if (typeof f === 'function') {\n      return f.call(obj, this)\n    }\n\n    var keys = Object.keys(obj)\n    var keyLength = keys.length\n    if (!this._pushInt(keyLength, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      keyLength,\n      keys.map((k) => [k, obj[k]])\n    )\n  }\n\n  _pushRawMap (len, map) {\n    // Sort keys for canoncialization\n    // 1. encode key\n    // 2. shorter key comes before longer key\n    // 3. same length keys are sorted with lower\n    //    byte value before higher\n\n    map = map.map(function (a) {\n      a[0] = Encoder.encode(a[0])\n      return a\n    }).sort(utils.keySorter)\n\n    for (var j = 0; j < len; j++) {\n      if (!this.push(map[j][0])) {\n        return false\n      }\n\n      if (!this.pushAny(map[j][1])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Alias for `.pushAny`\n   *\n   * @param {*} obj\n   * @returns {boolean} true on success\n   */\n  write (obj) {\n    return this.pushAny(obj)\n  }\n\n  /**\n   * Push any supported type onto the encoded stream\n   *\n   * @param {any} obj\n   * @returns {boolean} true on success\n   */\n  pushAny (obj) {\n    var typ = toType(obj)\n\n    switch (typ) {\n      case 'Number':\n        return this._pushNumber(obj)\n      case 'String':\n        return this._pushString(obj)\n      case 'Boolean':\n        return this._pushBoolean(obj)\n      case 'Object':\n        return this._pushObject(obj)\n      case 'Array':\n        return this._pushArray(this, obj)\n      case 'Uint8Array':\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\n      case 'Null':\n        return this._pushUInt8(NULL)\n      case 'Undefined':\n        return this._pushUndefined(obj)\n      case 'Map':\n        return this._pushMap(this, obj)\n      case 'Set':\n        return this._pushSet(this, obj)\n      case 'URL':\n        return this._pushUrl(this, obj)\n      case 'BigNumber':\n        return this._pushBigNumber(this, obj)\n      case 'Date':\n        return this._pushDate(this, obj)\n      case 'RegExp':\n        return this._pushRegexp(this, obj)\n      case 'Symbol':\n        switch (obj) {\n          case SYMS.NULL:\n            return this._pushObject(null)\n          case SYMS.UNDEFINED:\n            return this._pushUndefined(undefined)\n          // TODO: Add pluggable support for other symbols\n          default:\n            throw new Error('Unknown symbol: ' + obj.toString())\n        }\n      default:\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\n    }\n  }\n\n  finalize () {\n    if (this.offset === 0) {\n      return null\n    }\n\n    var result = this.result\n    var resultLength = this.resultLength\n    var resultMethod = this.resultMethod\n    var offset = this.offset\n\n    // Determine the size of the buffer\n    var size = 0\n    var i = 0\n\n    for (; i < offset; i++) {\n      size += resultLength[i]\n    }\n\n    var res = Buffer.allocUnsafe(size)\n    var index = 0\n    var length = 0\n\n    // Write the content into the result buffer\n    for (i = 0; i < offset; i++) {\n      length = resultLength[i]\n\n      switch (resultMethod[i]) {\n        case 0:\n          result[i].copy(res, index)\n          break\n        case 1:\n          res.writeUInt8(result[i], index, true)\n          break\n        case 2:\n          res.writeUInt16BE(result[i], index, true)\n          break\n        case 3:\n          res.writeUInt32BE(result[i], index, true)\n          break\n        case 4:\n          res.writeDoubleBE(result[i], index, true)\n          break\n        case 5:\n          res.write(result[i], index, length, 'utf8')\n          break\n        default:\n          throw new Error('unkown method')\n      }\n\n      index += length\n    }\n\n    var tmp = res\n\n    this._reset()\n\n    return tmp\n  }\n\n  _reset () {\n    this.result = []\n    this.resultMethod = []\n    this.resultLength = []\n    this.offset = 0\n  }\n\n  /**\n   * Encode the given value\n   * @param {*} o\n   * @returns {Buffer}\n   */\n  static encode (o) {\n    const enc = new Encoder()\n    const ret = enc.pushAny(o)\n    if (!ret) {\n      throw new Error('Failed to encode input')\n    }\n\n    return enc.finalize()\n  }\n}\n\nmodule.exports = Encoder\n"],"sourceRoot":""}